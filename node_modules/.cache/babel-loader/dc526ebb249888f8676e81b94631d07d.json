{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caoxue\\\\Desktop\\\\secondary\\\\secondary\\\\src\\\\pages\\\\index\\\\index.js\";\n\n/**\r\n * Created by Lenovo on 2019/8/4.\r\n */\nimport React from 'react';\nimport search from '../../images/index/search.png';\nimport publish from '../../images/index/publish.png';\nimport close from '../../images/index/close.png';\nimport { Carousel, ListView } from 'antd-mobile';\nimport axios from \"axios\";\nimport { getData, goNext } from '../../utils';\nimport './index.css';\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onEndReached = event => {\n      console.log(\"isLoading\" + this.state.isLoading);\n      console.log(\"hasMore\" + this.state.hasMore);\n\n      if (this.state.isLoading) {\n        return false;\n      }\n\n      if (!this.state.hasMore) {\n        return false;\n      }\n\n      this.setState({\n        isLoading: true\n      }, () => {\n        this.getProductList();\n      });\n    };\n\n    this.initData = []; //定义空数组，用于上拉加载更加时拼接数据\n\n    this.id = \"\";\n    this.key = \"\";\n    const dataSource = new ListView.DataSource({\n      rowHasChanged: (row1, row2) => row1 !== row2\n    }); //定义初始化数据源\n\n    this.state = {\n      isLoading: true,\n      //用来控制是否显示loading\n      dataSource: dataSource.cloneWithRows(this.initData),\n      pageNum: 1,\n      //定义初始化请求序号\n      pageSize: 10,\n      //定义初始化请求数量\n      typeList: [{\n        name: \"全部\"\n      }],\n      //定义初始化产品类型\n      activeType: 0,\n      //定义初始化产品类型选中状态\n      productList: [],\n      //定义初始化产品数组\n      hasMore: true,\n      //是否已经加载完成\n      bannerList: [],\n      //定义初始化轮播图数组\n      isShowClose: false,\n      //是否显示搜索框右边关闭按钮\n      statusText: \"加载中\" //上拉加载判断状态\n\n    };\n  } //选择商品类型\n\n\n  changeType(index, id) {\n    this.id = id;\n    this.state.pageNum = 1;\n    this.initData = [];\n    this.setState({\n      dataSource: this.state.dataSource.cloneWithRows(this.initData),\n      isLoading: false,\n      hasMore: true,\n      activeType: index,\n      statusText: \"加载中\"\n    });\n    this.getProductList();\n  } //点击某一商品进入商品详情\n\n\n  goDetail(item) {\n    goNext(this, \"indexDetail\", item);\n  } //点击进入发布页面\n\n\n  goPublish(e) {\n    goNext(this, \"app\", 1);\n  } //获取商品列表\n\n\n  getProductList() {\n    getData({\n      method: 'post',\n      url: 'getProductList',\n      isShowLoad: true,\n      data: {\n        pageNum: this.state.pageNum,\n        pageSize: this.state.pageSize,\n        productDesc: this.key,\n        productTypeId: this.id\n      },\n      successCB: res => {\n        this.state.pageNum++;\n        this.initData = this.initData.concat(res.result.list);\n        let total = res.result.total;\n\n        if (total == 0) {\n          this.setState({\n            statusText: \"暂无数据\"\n          });\n        } else if (total == this.initData.length) {\n          this.setState({\n            dataSource: this.state.dataSource.cloneWithRows(this.initData),\n            hasMore: false,\n            statusText: \"加载完成\"\n          });\n        } else {\n          setTimeout(() => {\n            this.setState({\n              dataSource: this.state.dataSource.cloneWithRows(this.initData),\n              isLoading: false\n            });\n          }, 600);\n        }\n      }\n    });\n  } //获取轮播图列表\n\n\n  getBannerList() {\n    getData({\n      method: 'get',\n      url: 'getBannerList',\n      successCB: res => {\n        this.setState({\n          bannerList: res.result\n        });\n      }\n    });\n  } //获取商品类型列表\n\n\n  getProductTypeList() {\n    getData({\n      method: 'get',\n      url: 'getProductTypeList',\n      successCB: res => {\n        localStorage.setItem(\"typeList\", JSON.stringify(res.result));\n        let typeList = this.state.typeList.concat(res.result);\n        this.setState({\n          typeList: typeList\n        });\n      }\n    });\n  } //通过商品关键字搜索\n\n\n  getProductListByKey() {\n    this.state.pageNum = 1;\n    this.initData = [];\n    this.setState({\n      dataSource: this.state.dataSource.cloneWithRows(this.initData),\n      isLoading: false,\n      hasMore: true,\n      statusText: \"加载中\"\n    });\n    var key = this.refs.input.value;\n    this.key = key;\n    this.getProductList();\n  } //加载页面时获取轮播图列表、商品类型列表、商品列表\n\n\n  componentDidMount() {\n    this.getProductList();\n    this.getProductTypeList();\n    this.getBannerList();\n  } //上拉加载更多时触发\n\n\n  onScroll(e) {} // console.dir(document.body);\n  // console.log(e);\n  //点击搜索框右边关闭图标时，清楚搜索内容并删除图标\n\n\n  closeValue() {\n    this.refs.input.value = '';\n    this.setState({\n      isShowClose: false\n    });\n  } //点击搜索框进行关键字搜索时，出现右边关闭图标\n\n\n  onChange() {\n    this.setState({\n      isShowClose: true\n    });\n  } //渲染页面\n\n\n  render() {\n    const row = (rowData, sectionID, rowID) => {\n      var productImgs = rowData.productImgs.split(\",\");\n      return React.createElement(\"div\", {\n        className: rowID % 2 == 0 ? \"index-product-right\" : \"index-product-left\",\n        key: rowID,\n        onClick: () => this.goDetail(rowData),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"index-img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: productImgs[0],\n        alt: \"\",\n        className: \"index-img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"index-desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, rowData && rowData.productDesc), React.createElement(\"div\", {\n        className: \"index-price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"\\uFFE5\", rowData && rowData.productPrice));\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"index-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cm-flex cm-width-full\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: search,\n      alt: \"\",\n      className: \"index-search\",\n      onClick: () => this.getProductListByKey(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"input\",\n      className: \"index-input\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u54C1\\u5173\\u952E\\u5B57\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), this.state.isShowClose ? React.createElement(\"img\", {\n      src: close,\n      alt: \"\",\n      className: \"index-close\",\n      onClick: () => this.closeValue(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }) : null), React.createElement(\"img\", {\n      src: publish,\n      alt: \"\",\n      className: \"cm-img-mid\",\n      onClick: e => this.goPublish(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"cm-mlr-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"index-carousel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, this.state.bannerList ? React.createElement(Carousel, {\n      class: \"index-height\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, this.state.bannerList.map(item => React.createElement(\"img\", {\n      src: item.image,\n      alt: \"\",\n      className: \"cm-img-banner index-banner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }))) : null), React.createElement(\"div\", {\n      className: \"cm-flex cm-ai-c index-scroll\",\n      ref: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, this.state.typeList && this.state.typeList.map((item, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: this.state.activeType == index ? \"index-type-active\" : \"index-type\",\n        onClick: () => this.changeType(index, item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, item.name);\n    }))), React.createElement(ListView, {\n      useBodyScroll: true,\n      ref: el => this.lv = el,\n      dataSource: this.state.dataSource,\n      renderFooter: () => React.createElement(\"div\", {\n        style: {\n          paddingBottom: 60,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, this.state.statusText),\n      renderBodyComponent: () => React.createElement(Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }),\n      renderRow: row,\n      pageSize: 4,\n      onScroll: e => this.onScroll(e),\n      scrollRenderAheadDistance: 500,\n      onEndReached: this.onEndReached,\n      onEndReachedThreshold: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction Body(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, props.children));\n}","map":{"version":3,"sources":["C:\\Users\\caoxue\\Desktop\\secondary\\secondary\\src\\pages\\index\\index.js"],"names":["React","search","publish","close","Carousel","ListView","axios","getData","goNext","Index","Component","constructor","props","onEndReached","event","console","log","state","isLoading","hasMore","setState","getProductList","initData","id","key","dataSource","DataSource","rowHasChanged","row1","row2","cloneWithRows","pageNum","pageSize","typeList","name","activeType","productList","bannerList","isShowClose","statusText","changeType","index","goDetail","item","goPublish","e","method","url","isShowLoad","data","productDesc","productTypeId","successCB","res","concat","result","list","total","length","setTimeout","getBannerList","getProductTypeList","localStorage","setItem","JSON","stringify","getProductListByKey","refs","input","value","componentDidMount","onScroll","closeValue","onChange","render","row","rowData","sectionID","rowID","productImgs","split","productPrice","map","image","el","lv","paddingBottom","textAlign","Body","children"],"mappings":"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","sourcesContent":["/**\r\n * Created by Lenovo on 2019/8/4.\r\n */\r\nimport React from 'react';\r\nimport search from '../../images/index/search.png';\r\nimport publish from '../../images/index/publish.png';\r\nimport close from '../../images/index/close.png'\r\nimport {Carousel,ListView} from 'antd-mobile';\r\nimport axios from \"axios\";\r\nimport {getData,goNext} from '../../utils';\r\nimport './index.css';\r\nexport default class Index extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.initData = [];//定义空数组，用于上拉加载更加时拼接数据\r\n        this.id=\"\";\r\n        this.key=\"\";\r\n        const dataSource = new ListView.DataSource({\r\n            rowHasChanged: (row1, row2) => row1 !== row2,\r\n        })//定义初始化数据源\r\n        this.state = {\r\n            isLoading: true,//用来控制是否显示loading\r\n            dataSource: dataSource.cloneWithRows(this.initData),\r\n            pageNum:1,//定义初始化请求序号\r\n            pageSize:10,//定义初始化请求数量\r\n            typeList:[{name:\"全部\"}],//定义初始化产品类型\r\n            activeType:0,//定义初始化产品类型选中状态\r\n            productList:[],//定义初始化产品数组\r\n            hasMore:true,//是否已经加载完成\r\n            bannerList:[],//定义初始化轮播图数组\r\n            isShowClose:false,//是否显示搜索框右边关闭按钮\r\n            statusText:\"加载中\"//上拉加载判断状态\r\n        }\r\n    }\r\n    //选择商品类型\r\n    changeType(index,id){\r\n        this.id = id;\r\n        this.state.pageNum = 1;\r\n        this.initData = [];\r\n        this.setState({\r\n            dataSource: this.state.dataSource.cloneWithRows(this.initData),\r\n            isLoading: false,\r\n            hasMore:true,\r\n            activeType:index,\r\n            statusText:\"加载中\"\r\n        })\r\n        this.getProductList();\r\n    }\r\n    //点击某一商品进入商品详情\r\n    goDetail(item){\r\n        goNext(this,\"indexDetail\",item);\r\n    }\r\n    //点击进入发布页面\r\n    goPublish(e){\r\n        goNext(this,\"app\",1);\r\n    }\r\n    //获取商品列表\r\n    getProductList(){\r\n        getData({\r\n                method: 'post',\r\n                url: 'getProductList',\r\n                isShowLoad:true,\r\n                data:{\r\n                    pageNum:this.state.pageNum,\r\n                    pageSize:this.state.pageSize,\r\n                    productDesc:this.key,\r\n                    productTypeId:this.id\r\n                },\r\n                successCB: (res) => {\r\n                    this.state.pageNum++;\r\n                    this.initData = this.initData.concat(res.result.list);\r\n                    let total = res.result.total;\r\n                    if(total == 0){\r\n                        this.setState({\r\n                            statusText:\"暂无数据\"\r\n                        })\r\n                    }else if(total == this.initData.length){\r\n                        this.setState({\r\n                            dataSource: this.state.dataSource.cloneWithRows(this.initData),\r\n                            hasMore:false,\r\n                            statusText:\"加载完成\"\r\n                        })\r\n                    }else {\r\n                        setTimeout(()=>{\r\n                            this.setState({\r\n                                dataSource: this.state.dataSource.cloneWithRows(this.initData),\r\n                                isLoading: false,\r\n                            });\r\n                        },600)\r\n\r\n                    }\r\n                }\r\n        })\r\n    }\r\n    //获取轮播图列表\r\n    getBannerList(){\r\n        getData({\r\n                method: 'get',\r\n                url: 'getBannerList',\r\n                successCB: (res) => {\r\n                    this.setState({\r\n                        bannerList: res.result\r\n                    })\r\n                }\r\n        })\r\n    }\r\n    //获取商品类型列表\r\n    getProductTypeList(){\r\n        getData({\r\n            method: 'get',\r\n            url: 'getProductTypeList',\r\n            successCB: (res) => {\r\n                localStorage.setItem(\"typeList\",JSON.stringify(res.result));\r\n                let typeList = this.state.typeList.concat(res.result);\r\n                this.setState({\r\n                    typeList: typeList\r\n                })\r\n            }\r\n        })\r\n    }\r\n    //通过商品关键字搜索\r\n    getProductListByKey(){\r\n        this.state.pageNum = 1;\r\n        this.initData = [];\r\n        this.setState({\r\n            dataSource: this.state.dataSource.cloneWithRows(this.initData),\r\n            isLoading: false,\r\n            hasMore:true,\r\n            statusText:\"加载中\"\r\n        })\r\n        var key = this.refs.input.value;\r\n        this.key = key;\r\n        this.getProductList()\r\n    }\r\n    //加载页面时获取轮播图列表、商品类型列表、商品列表\r\n    componentDidMount(){\r\n        this.getProductList();\r\n        this.getProductTypeList();\r\n        this.getBannerList();\r\n    }\r\n    //上拉加载更多时触发\r\n    onEndReached = (event) => {\r\n        console.log(\"isLoading\"+this.state.isLoading);\r\n        console.log(\"hasMore\"+this.state.hasMore);\r\n        if (this.state.isLoading ) {\r\n            return false;\r\n        }\r\n        if (!this.state.hasMore) {\r\n            return false;\r\n        }\r\n        this.setState({ isLoading: true},()=>{\r\n            this.getProductList();\r\n        });\r\n    }\r\n    onScroll(e){\r\n        // console.dir(document.body);\r\n        // console.log(e);\r\n    }\r\n    //点击搜索框右边关闭图标时，清楚搜索内容并删除图标\r\n    closeValue(){\r\n        this.refs.input.value = '';\r\n        this.setState({\r\n            isShowClose:false\r\n        });\r\n    }\r\n    //点击搜索框进行关键字搜索时，出现右边关闭图标\r\n    onChange(){\r\n        this.setState({\r\n            isShowClose:true\r\n        })\r\n    }\r\n    //渲染页面\r\n    render() {\r\n        const row = (rowData, sectionID, rowID) => {\r\n            var productImgs = rowData.productImgs.split(\",\");\r\n            return (\r\n                    <div  className={rowID%2==0?\"index-product-right\":\"index-product-left\"} key={rowID} onClick={()=>this.goDetail(rowData)}>\r\n                        <div className=\"index-img\">\r\n                            <img src={productImgs[0]} alt=\"\" className=\"index-img\"/>\r\n                        </div>\r\n                        <div className=\"index-desc\">{rowData && rowData.productDesc}</div>\r\n                        <div className=\"index-price\">￥{rowData && rowData.productPrice}</div>\r\n                    </div>\r\n            );\r\n        };\r\n        return (\r\n            <div>\r\n                <div>\r\n                <div className=\"index-top\">\r\n                    <div className=\"cm-flex cm-width-full\">\r\n                        <img src={search} alt=\"\" className=\"index-search\" onClick={()=>this.getProductListByKey()}/>\r\n                        <input type=\"text\"  ref=\"input\" className=\"index-input\" placeholder=\"请输入商品关键字\"/>\r\n                        {this.state.isShowClose?\r\n                            <img src={close} alt=\"\" className=\"index-close\" onClick={()=>this.closeValue()}/>:null\r\n                        }\r\n                    </div>\r\n                    <img src={publish} alt=\"\" className=\"cm-img-mid\" onClick={(e)=>this.goPublish(e)}/>\r\n                </div>\r\n                </div>\r\n                <div className=\"cm-mlr-15\">\r\n                    <div className=\"index-carousel\">\r\n                        {this.state.bannerList? <Carousel class=\"index-height\">\r\n                              {this.state.bannerList.map(item => (\r\n                                  <img src={item.image} alt=\"\" className=\"cm-img-banner index-banner\"/>\r\n                              ))}\r\n                            </Carousel>:null\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"cm-flex cm-ai-c index-scroll\" ref=\"box\">\r\n                    {this.state.typeList && this.state.typeList.map((item,index)=>{\r\n                        return(\r\n                            <div key={index} className={this.state.activeType == index?\"index-type-active\":\"index-type\"} onClick={()=>this.changeType(index,item.id)}>{item.name}</div>\r\n                        )\r\n                    })}\r\n                     </div>\r\n                </div>\r\n                    <ListView\r\n                        useBodyScroll={true}\r\n                        ref={el => this.lv = el}\r\n                        dataSource={this.state.dataSource}\r\n                        renderFooter={() => (<div style={{ paddingBottom: 60, textAlign: 'center' }}>\r\n                            {this.state.statusText}\r\n                        </div>)}\r\n                        renderBodyComponent={() => <Body/>}\r\n                        renderRow={row}\r\n                        pageSize={4}\r\n                        onScroll={(e) => this.onScroll(e)}\r\n                        scrollRenderAheadDistance={500}\r\n                        onEndReached={this.onEndReached}\r\n                        onEndReachedThreshold={10}\r\n                    />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction Body(props) {\r\n    return(\r\n        <div>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}