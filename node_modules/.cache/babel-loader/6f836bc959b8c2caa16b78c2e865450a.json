{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caoxue\\\\Desktop\\\\secondary\\\\src\\\\pages\\\\product\\\\publish\\\\publish.js\";\nimport React from 'react';\nimport { ImagePicker } from 'antd-mobile';\nimport './publish.css';\nimport { Select, Title, List, Input, Button, TabBottom } from '../../../share';\nimport { getData, goNext, checkParam, isDefine } from '../../../utils';\nimport { Toast } from 'antd-mobile';\nexport default class Publish extends React.Component {\n  constructor(props) {\n    super(props); //第一步：初始化state。\n\n    this.onChange = (productImgs, type, index) => {\n      this.setState({\n        productImgs\n      });\n    };\n\n    this.state = {\n      productImgs: [],\n      typeList: [],\n      productType: '',\n      productPrice: '',\n      productDesc: '',\n      productAddress: \"\"\n    };\n  }\n\n  componentDidMount() {\n    //第二步：调取接口数据。1.检查登录状态，如果未登录，getData方法中统一处理未登录进入登录页面；2.获取分类列表信息\n    getData({\n      method: 'post',\n      url: 'checkLoginValid'\n    });\n    this.getTypeList();\n  } //首页获取了商品类型列表并缓存下来，这里直接取缓存\n\n\n  getTypeList() {\n    if (isDefine(localStorage.getItem(\"typeList\"))) {\n      this.setState({\n        typeList: JSON.parse(localStorage.getItem(\"typeList\"))\n      });\n    } else {\n      getData({\n        method: 'get',\n        url: 'getProductTypeList',\n        successCB: res => {\n          localStorage.setItem(\"typeList\", JSON.stringify(res.result));\n          let typeList = this.state.typeList.concat(res.result);\n          this.setState({\n            typeList: typeList\n          });\n        }\n      });\n    }\n  }\n\n  //获取商品描述\n  changeDes(event) {\n    this.setState({\n      productDesc: event.target.value\n    });\n  } //第四步：处理页面逻辑之发布商品\n\n\n  submit() {\n    var arr = [{\n      value: this.state.productDesc.length < 9 || this.state.productDesc.length > 300,\n      msg: \"商品描述请输入10-300个字符\"\n    }, {\n      value: this.state.productDesc,\n      msg: \"请输入商品描述\"\n    }, {\n      value: this.state.productImgs[0],\n      msg: \"请添加图片\"\n    }, {\n      value: this.state.productPrice,\n      msg: \"请输入价格\"\n    }, {\n      value: this.state.productAddress,\n      msg: \"请输入发货地\"\n    }, {\n      value: this.state.productType,\n      msg: \"请选择分类\"\n    }];\n    checkParam(arr, () => {\n      var token = localStorage.getItem(\"token\");\n      let param = new FormData(); //创建form对象,通过append向form对象添加数据\n\n      for (var i = 0; i < this.state.productImgs.length; i++) {\n        param.append('productImgs', this.state.productImgs[i].file); //将每一张图片添加\n      }\n\n      param.append('productDesc', this.state.productDesc);\n      param.append('productPrice', this.state.productPrice);\n      param.append('productAddress', this.state.productAddress);\n      param.append('productTypeId', this.state.productType);\n      console.log(param.values());\n      getData({\n        method: 'post',\n        url: 'publishProduct',\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'token': token\n        },\n        data: param,\n        successCB: () => {\n          Toast.success(\"发布成功\");\n          goNext(this, \"index\");\n        }\n      });\n    });\n  } //第四步：处理页面逻辑之金额正则校验\n\n\n  changePrice(val, event) {\n    event.target.value = event.target.value.replace(/[^\\d.]/g, \"\"); //清除“数字”和“.”以外的任意字符\n\n    event.target.value = event.target.value.replace(/\\.{2,}/g, \".\"); //只保留第一个“. ”，清除多余连续的“.”\n\n    event.target.value = event.target.value.replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\"); //将第一个“.”用特殊符号替换，其他“.”都转换为空，再将特殊符号用“.”替换回来,目的是为了保证清除掉非连续“.”\n\n    event.target.value = event.target.value.replace(/^(\\d+)\\.(\\d\\d).*$/, '$1$2.$3'); //只能输入两个小数\n\n    if (event.target.value.indexOf(\".\") < 0 && event.target.value !== \"\") {\n      //以上已经过滤，此处控制的是如果没有小数点，首位不能为类似于 01、02的金额\n      event.target.value = parseFloat(event.target.value);\n    } //通过 setState 改变金额\n\n\n    this.setState({\n      productPrice: event.target.value\n    });\n  } //第四步：处理页面逻辑之更新state\n\n\n  change(state) {\n    this.setState(state);\n  } //第三步：渲染页面\n\n\n  render() {\n    const productImgs = this.state.productImgs;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Title, {\n      isHome: true,\n      title: \"\\u5546\\u54C1\\u53D1\\u5E03\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"cm-mlr-02 cm-mt-02\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      name: \"\",\n      id: \"\",\n      cols: \"30\",\n      onChange: e => this.change({\n        productDesc: e.target.value\n      }),\n      maxLength: \"300\",\n      defaultValue: this.state.productDesc,\n      className: \"cm-w-full cm-fs-028 cm-border-ddd cm-p-02 publish-textarea\",\n      rows: \"10\",\n      placeholder: \"\\u63CF\\u8FF0\\u5546\\u54C1\\u8F6C\\u624B\\u539F\\u56E0\\uFF0C\\u5165\\u624B\\u6E20\\u9053\\u548C\\u4F7F\\u7528\\u611F\\u53D7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(ImagePicker, {\n      files: productImgs,\n      onChange: this.onChange,\n      onImageClick: (index, fs) => console.log(index, fs),\n      selectable: productImgs.length < 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Input, {\n      label: \"\\u4EF7\\u683C\",\n      style: {\n        textAlign: \"right\"\n      },\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u4EF7\\u683C\",\n      onChange: (val, event) => this.changePrice(val, event),\n      maxLength: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Input, {\n      label: \"\\u53D1\\u8D27\\u5730\",\n      style: {\n        textAlign: \"right\"\n      },\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u53D1\\u8D27\\u5730,\\u5982:\\u6E56\\u5317\\u7701\\u6B66\\u6C49\\u5E02\",\n      onChange: val => this.change({\n        productAddress: val\n      }),\n      maxLength: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Select, {\n      options: this.state.typeList,\n      babel: \"\\u5206\\u7C7B\",\n      onChange: item => this.change({\n        productType: item.id\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      className: \"cm-mt-04\",\n      onClick: () => this.submit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"\\u53D1  \\u5E03\"), React.createElement(TabBottom, {\n      history: this.props.history,\n      activeNum: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\caoxue\\Desktop\\secondary\\src\\pages\\product\\publish\\publish.js"],"names":["React","ImagePicker","Select","Title","List","Input","Button","TabBottom","getData","goNext","checkParam","isDefine","Toast","Publish","Component","constructor","props","onChange","productImgs","type","index","setState","state","typeList","productType","productPrice","productDesc","productAddress","componentDidMount","method","url","getTypeList","localStorage","getItem","JSON","parse","successCB","res","setItem","stringify","result","concat","changeDes","event","target","value","submit","arr","length","msg","token","param","FormData","i","append","file","console","log","values","headers","data","success","changePrice","val","replace","indexOf","parseFloat","change","render","e","fs","textAlign","item","id","history"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {ImagePicker} from 'antd-mobile';\r\nimport './publish.css';\r\nimport {Select,Title,List,Input,Button,TabBottom} from '../../../share';\r\nimport {getData,goNext,checkParam,isDefine} from '../../../utils';\r\nimport {Toast} from 'antd-mobile';\r\nexport default class Publish extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //第一步：初始化state。\r\n        this.state = {\r\n            productImgs:[],\r\n            typeList:[],\r\n            productType:'',\r\n            productPrice:'',\r\n            productDesc:'',\r\n            productAddress:\"\",\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        //第二步：调取接口数据。1.检查登录状态，如果未登录，getData方法中统一处理未登录进入登录页面；2.获取分类列表信息\r\n        getData({\r\n            method: 'post',\r\n            url: 'checkLoginValid',\r\n        });\r\n        this.getTypeList();\r\n    }\r\n    //首页获取了商品类型列表并缓存下来，这里直接取缓存\r\n    getTypeList(){\r\n        if(isDefine(localStorage.getItem(\"typeList\"))){\r\n            this.setState({\r\n                typeList:JSON.parse(localStorage.getItem(\"typeList\"))\r\n            })\r\n        }else {\r\n            getData({\r\n                method: 'get',\r\n                url: 'getProductTypeList',\r\n                successCB: (res) => {\r\n                    localStorage.setItem(\"typeList\",JSON.stringify(res.result));\r\n                    let typeList = this.state.typeList.concat(res.result);\r\n                    this.setState({\r\n                        typeList: typeList\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onChange = (productImgs, type, index) => {\r\n        this.setState({\r\n            productImgs,\r\n        });\r\n    }\r\n    //获取商品描述\r\n    changeDes(event){\r\n        this.setState({\r\n            productDesc:event.target.value\r\n        })\r\n    }\r\n    //第四步：处理页面逻辑之发布商品\r\n    submit(){\r\n        var arr = [\r\n            {value: (this.state.productDesc.length<9||this.state.productDesc.length>300), msg: \"商品描述请输入10-300个字符\"},\r\n            {value: this.state.productDesc, msg: \"请输入商品描述\"},\r\n            {value: this.state.productImgs[0], msg: \"请添加图片\"},\r\n            {value: this.state.productPrice, msg: \"请输入价格\"},\r\n            {value: this.state.productAddress, msg: \"请输入发货地\"},\r\n            {value: this.state.productType, msg: \"请选择分类\"},\r\n        ];\r\n        checkParam(arr,()=>{\r\n            var token = localStorage.getItem(\"token\");\r\n            let param = new FormData(); //创建form对象,通过append向form对象添加数据\r\n            for (var i = 0; i < this.state.productImgs.length; i++){\r\n                param.append('productImgs',this.state.productImgs[i].file);//将每一张图片添加\r\n            }\r\n            param.append('productDesc',this.state.productDesc);\r\n            param.append('productPrice',this.state.productPrice);\r\n            param.append('productAddress',this.state.productAddress);\r\n            param.append('productTypeId',this.state.productType);\r\n            console.log(param.values());\r\n                getData({\r\n                    method: 'post',\r\n                    url: 'publishProduct',\r\n                    headers:{\r\n                        'Content-Type':'multipart/form-data',\r\n                        'token':token\r\n                    },\r\n                    data: param,\r\n                    successCB: () => {\r\n                        Toast.success(\"发布成功\");\r\n                        goNext(this,\"index\");\r\n                    }\r\n                })\r\n        })\r\n    }\r\n    //第四步：处理页面逻辑之金额正则校验\r\n    changePrice(val,event){\r\n        event.target.value = event.target.value.replace(/[^\\d.]/g,\"\");\r\n        //清除“数字”和“.”以外的任意字符\r\n        event.target.value = event.target.value.replace(/\\.{2,}/g,\".\");\r\n        //只保留第一个“. ”，清除多余连续的“.”\r\n        event.target.value = event.target.value.replace(\".\",\"$#$\").replace(/\\./g,\"\").replace(\"$#$\",\".\");\r\n        //将第一个“.”用特殊符号替换，其他“.”都转换为空，再将特殊符号用“.”替换回来,目的是为了保证清除掉非连续“.”\r\n        event.target.value = event.target.value.replace(/^(\\d+)\\.(\\d\\d).*$/,'$1$2.$3');\r\n        //只能输入两个小数\r\n        if(event.target.value.indexOf(\".\")< 0 && event.target.value !==\"\"){\r\n            //以上已经过滤，此处控制的是如果没有小数点，首位不能为类似于 01、02的金额\r\n            event.target.value= parseFloat(event.target.value);\r\n        }\r\n        //通过 setState 改变金额\r\n        this.setState({\r\n            productPrice:event.target.value\r\n        })\r\n    }\r\n    //第四步：处理页面逻辑之更新state\r\n    change(state){\r\n        this.setState(state)\r\n    }\r\n    //第三步：渲染页面\r\n    render(){\r\n        const { productImgs} = this.state;\r\n        return(\r\n            <div>\r\n                <Title isHome={true} title=\"商品发布\"/>\r\n                <div className=\"cm-mlr-02 cm-mt-02\">\r\n                    <textarea name=\"\" id=\"\" cols=\"30\"\r\n                              onChange={(e)=>this.change({productDesc:e.target.value})}\r\n                              maxLength=\"300\"\r\n                              defaultValue={this.state.productDesc}\r\n                              className=\"cm-w-full cm-fs-028 cm-border-ddd cm-p-02 publish-textarea\" rows=\"10\" placeholder=\"描述商品转手原因，入手渠道和使用感受\"></textarea>\r\n                    <ImagePicker\r\n                        files={productImgs}\r\n                        onChange={this.onChange}\r\n                        onImageClick={(index, fs) => console.log(index, fs)}\r\n                        selectable={productImgs.length < 9}\r\n                    />\r\n                <List>\r\n                    <Input\r\n                        label=\"价格\"\r\n                        style = {{textAlign:\"right\"}}\r\n                        placeholder=\"请输入价格\"\r\n                        onChange={(val,event)=>this.changePrice(val,event)}\r\n                        maxLength={10}\r\n                    />\r\n                </List>\r\n                    <List>\r\n                        <Input\r\n                            label=\"发货地\"\r\n                            style = {{textAlign:\"right\"}}\r\n                            placeholder=\"请输入发货地,如:湖北省武汉市\"\r\n                            onChange={(val)=>this.change({productAddress:val})}\r\n                            maxLength={10}\r\n                        />\r\n                    </List>\r\n                <List>\r\n                    <Select\r\n                         options={this.state.typeList}\r\n                         babel=\"分类\"\r\n                         onChange={(item)=>this.change({productType : item.id})}\r\n                    />\r\n                </List>\r\n                </div>\r\n                <Button  className=\"cm-mt-04\" onClick={()=>this.submit()}>发  布</Button>\r\n                <TabBottom history={this.props.history} activeNum={1}/>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}