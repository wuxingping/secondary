{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caoxue\\\\Desktop\\\\secondary\\\\secondary\\\\src\\\\pages\\\\message\\\\pullToRefresh.js\";\n\n/**\r\n * Created by Lenovo on 2019/9/15.\r\n */\nimport { PullToRefresh, ListView, Button } from 'antd-mobile';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nconst data = [{\n  img: 'https://zos.alipayobjects.com/rmsportal/dKbkpPXKfvZzWCM.png',\n  title: 'Meet hotel',\n  des: '不是所有的兼职汪都需要风吹日晒'\n}, {\n  img: 'https://zos.alipayobjects.com/rmsportal/XmwCzSeJiqpkuMB.png',\n  title: 'McDonald\\'s invites you',\n  des: '不是所有的兼职汪都需要风吹日晒'\n}, {\n  img: 'https://zos.alipayobjects.com/rmsportal/hfVtzEhPzTUewPm.png',\n  title: 'Eat the week',\n  des: '不是所有的兼职汪都需要风吹日晒'\n}];\nconst NUM_ROWS = 20;\nlet pageIndex = 0;\n\nfunction genData(pIndex = 0) {\n  const dataArr = [];\n\n  for (let i = 0; i < NUM_ROWS; i++) {\n    dataArr.push(\"row - \".concat(pIndex * NUM_ROWS + i));\n  }\n\n  return dataArr;\n}\n\nexport default class PullToRefreshScroll extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onRefresh = () => {\n      this.setState({\n        refreshing: true,\n        isLoading: true\n      }); // simulate initial Ajax\n\n      setTimeout(() => {\n        this.rData = genData();\n        this.setState({\n          dataSource: this.state.dataSource.cloneWithRows(this.rData),\n          refreshing: false,\n          isLoading: false\n        });\n      }, 600);\n    };\n\n    const dataSource = new ListView.DataSource({\n      rowHasChanged: (row1, row2) => row1 !== row2\n    });\n    this.state = {\n      dataSource,\n      refreshing: true,\n      isLoading: true,\n      height: document.documentElement.clientHeight,\n      useBodyScroll: false\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.useBodyScroll) {\n      document.body.style.overflow = 'auto';\n    } else {\n      document.body.style.overflow = 'hidden';\n    }\n  }\n\n  componentDidMount() {\n    const hei = this.state.height - ReactDOM.findDOMNode(this.lv).offsetTop;\n    setTimeout(() => {\n      this.rData = genData();\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(genData()),\n        height: hei,\n        refreshing: false,\n        isLoading: false\n      });\n    }, 1500);\n  }\n\n  render() {\n    const separator = (sectionID, rowID) => React.createElement(\"div\", {\n      key: \"\".concat(sectionID, \"-\").concat(rowID),\n      style: {\n        backgroundColor: '#F5F5F9',\n        height: 8,\n        borderTop: '1px solid #ECECED',\n        borderBottom: '1px solid #ECECED'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    });\n\n    let index = data.length - 1;\n\n    const row = (rowData, sectionID, rowID) => {\n      if (index < 0) {\n        index = data.length - 1;\n      }\n\n      const obj = data[index--];\n      return React.createElement(\"div\", {\n        key: rowID,\n        style: {\n          padding: '0 15px',\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: '50px',\n          lineHeight: '50px',\n          color: '#888',\n          fontSize: '18px',\n          borderBottom: '1px solid #ddd'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, obj.title), React.createElement(\"div\", {\n        style: {\n          display: '-webkit-box',\n          display: 'flex',\n          padding: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: {\n          height: '63px',\n          width: '63px',\n          marginRight: '15px'\n        },\n        src: obj.img,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          display: 'inline-block'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          marginBottom: '8px',\n          color: '#000',\n          fontSize: '16px',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap',\n          maxWidth: '250px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, obj.des, \"-\", rowData), React.createElement(\"div\", {\n        style: {\n          fontSize: '16px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: '30px',\n          color: '#FF6E27'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, rowID), \" \\u5143/\\u4EFB\\u52A1\"))));\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        margin: '30px 15px'\n      },\n      inline: true,\n      onClick: () => this.setState({\n        useBodyScroll: !this.state.useBodyScroll\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.state.useBodyScroll ? 'useBodyScroll' : 'partial scroll'), React.createElement(ListView, {\n      key: this.state.useBodyScroll ? '0' : '1',\n      ref: el => this.lv = el,\n      dataSource: this.state.dataSource,\n      renderHeader: () => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Pull to refresh\"),\n      renderFooter: () => React.createElement(\"div\", {\n        style: {\n          padding: 30,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, this.state.isLoading ? 'Loading...' : 'Loaded'),\n      renderRow: row,\n      renderSeparator: separator,\n      useBodyScroll: this.state.useBodyScroll,\n      style: this.state.useBodyScroll ? {} : {\n        height: this.state.height,\n        border: '1px solid #ddd',\n        margin: '5px 0'\n      },\n      pullToRefresh: React.createElement(PullToRefresh, {\n        refreshing: this.state.refreshing,\n        onRefresh: this.onRefresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }),\n      pageSize: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\caoxue\\Desktop\\secondary\\secondary\\src\\pages\\message\\pullToRefresh.js"],"names":["PullToRefresh","ListView","Button","React","ReactDOM","data","img","title","des","NUM_ROWS","pageIndex","genData","pIndex","dataArr","i","push","PullToRefreshScroll","Component","constructor","props","onRefresh","setState","refreshing","isLoading","setTimeout","rData","dataSource","state","cloneWithRows","DataSource","rowHasChanged","row1","row2","height","document","documentElement","clientHeight","useBodyScroll","componentDidUpdate","body","style","overflow","componentDidMount","hei","findDOMNode","lv","offsetTop","render","separator","sectionID","rowID","backgroundColor","borderTop","borderBottom","index","length","row","rowData","obj","padding","lineHeight","color","fontSize","display","width","marginRight","marginBottom","textOverflow","whiteSpace","maxWidth","margin","el","textAlign","border"],"mappings":"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","sourcesContent":["/**\r\n * Created by Lenovo on 2019/9/15.\r\n */\r\nimport { PullToRefresh, ListView, Button } from 'antd-mobile';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nconst data = [\r\n    {\r\n        img: 'https://zos.alipayobjects.com/rmsportal/dKbkpPXKfvZzWCM.png',\r\n        title: 'Meet hotel',\r\n        des: '不是所有的兼职汪都需要风吹日晒',\r\n    },\r\n    {\r\n        img: 'https://zos.alipayobjects.com/rmsportal/XmwCzSeJiqpkuMB.png',\r\n        title: 'McDonald\\'s invites you',\r\n        des: '不是所有的兼职汪都需要风吹日晒',\r\n    },\r\n    {\r\n        img: 'https://zos.alipayobjects.com/rmsportal/hfVtzEhPzTUewPm.png',\r\n        title: 'Eat the week',\r\n        des: '不是所有的兼职汪都需要风吹日晒',\r\n    },\r\n];\r\nconst NUM_ROWS = 20;\r\nlet pageIndex = 0;\r\n\r\nfunction genData(pIndex = 0) {\r\n    const dataArr = [];\r\n    for (let i = 0; i < NUM_ROWS; i++) {\r\n        dataArr.push(`row - ${(pIndex * NUM_ROWS) + i}`);\r\n    }\r\n    return dataArr;\r\n}\r\n\r\nexport default class PullToRefreshScroll extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const dataSource = new ListView.DataSource({\r\n            rowHasChanged: (row1, row2) => row1 !== row2,\r\n        });\r\n\r\n        this.state = {\r\n            dataSource,\r\n            refreshing: true,\r\n            isLoading: true,\r\n            height: document.documentElement.clientHeight,\r\n            useBodyScroll: false,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.useBodyScroll) {\r\n            document.body.style.overflow = 'auto';\r\n        } else {\r\n            document.body.style.overflow = 'hidden';\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const hei = this.state.height - ReactDOM.findDOMNode(this.lv).offsetTop;\r\n\r\n        setTimeout(() => {\r\n            this.rData = genData();\r\n            this.setState({\r\n                dataSource: this.state.dataSource.cloneWithRows(genData()),\r\n                height: hei,\r\n                refreshing: false,\r\n                isLoading: false,\r\n            });\r\n        }, 1500);\r\n    }\r\n\r\n    onRefresh = () => {\r\n        this.setState({ refreshing: true, isLoading: true });\r\n        // simulate initial Ajax\r\n        setTimeout(() => {\r\n            this.rData = genData();\r\n            this.setState({\r\n                dataSource: this.state.dataSource.cloneWithRows(this.rData),\r\n                refreshing: false,\r\n                isLoading: false,\r\n            });\r\n        }, 600);\r\n    };\r\n\r\n    render() {\r\n        const separator = (sectionID, rowID) => (\r\n            <div\r\n                key={`${sectionID}-${rowID}`}\r\n                style={{\r\n                    backgroundColor: '#F5F5F9',\r\n                    height: 8,\r\n                    borderTop: '1px solid #ECECED',\r\n                    borderBottom: '1px solid #ECECED',\r\n                }}\r\n            />\r\n        );\r\n        let index = data.length - 1;\r\n        const row = (rowData, sectionID, rowID) => {\r\n            if (index < 0) {\r\n                index = data.length - 1;\r\n            }\r\n            const obj = data[index--];\r\n            return (\r\n                <div key={rowID}\r\n                     style={{\r\n                         padding: '0 15px',\r\n                         backgroundColor: 'white',\r\n                     }}\r\n                >\r\n                    <div style={{ height: '50px', lineHeight: '50px', color: '#888', fontSize: '18px', borderBottom: '1px solid #ddd' }}>\r\n                        {obj.title}\r\n                    </div>\r\n                    <div style={{ display: '-webkit-box', display: 'flex', padding: '15px' }}>\r\n                        <img style={{ height: '63px', width: '63px', marginRight: '15px' }} src={obj.img} alt=\"\" />\r\n                        <div style={{ display: 'inline-block' }}>\r\n                            <div style={{ marginBottom: '8px', color: '#000', fontSize: '16px', overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap', maxWidth: '250px' }}>{obj.des}-{rowData}</div>\r\n                            <div style={{ fontSize: '16px' }}><span style={{ fontSize: '30px', color: '#FF6E27' }}>{rowID}</span> 元/任务</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        };\r\n        return (<div>\r\n            <Button\r\n                style={{ margin: '30px 15px' }}\r\n                inline\r\n                onClick={() => this.setState({ useBodyScroll: !this.state.useBodyScroll })}\r\n            >\r\n                {this.state.useBodyScroll ? 'useBodyScroll' : 'partial scroll'}\r\n            </Button>\r\n            <ListView\r\n                key={this.state.useBodyScroll ? '0' : '1'}\r\n                ref={el => this.lv = el}\r\n                dataSource={this.state.dataSource}\r\n                renderHeader={() => <span>Pull to refresh</span>}\r\n                renderFooter={() => (<div style={{ padding: 30, textAlign: 'center' }}>\r\n                    {this.state.isLoading ? 'Loading...' : 'Loaded'}\r\n                </div>)}\r\n                renderRow={row}\r\n                renderSeparator={separator}\r\n                useBodyScroll={this.state.useBodyScroll}\r\n                style={this.state.useBodyScroll ? {} : {\r\n                        height: this.state.height,\r\n                        border: '1px solid #ddd',\r\n                        margin: '5px 0',\r\n                    }}\r\n                pullToRefresh={<PullToRefresh\r\n                    refreshing={this.state.refreshing}\r\n                    onRefresh={this.onRefresh}\r\n                />}\r\n                pageSize={5}\r\n            />\r\n        </div>);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}