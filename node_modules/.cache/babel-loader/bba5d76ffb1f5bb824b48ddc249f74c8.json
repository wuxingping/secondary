{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caoxue\\\\Desktop\\\\secondary\\\\src\\\\share\\\\address\\\\index.js\";\n\n/**\r\n * Created by Lenovo on 2019/10/15.\r\n */\nimport React from 'react';\nimport { defaultProps } from './defaultProps';\nimport './index.css';\nimport close from '../images/address/close-gray.png';\nimport checked from '../images/address/checked.png';\nimport { addressInfo } from './addressInfo';\nexport default class Address extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.generate = (list, arr, superId) => {\n      var data = arr || [];\n\n      for (var i = 0; i < list.length; i++) {\n        var item = list[i];\n\n        if (item.superId == superId) {\n          if (item.type == \"province\") {\n            item.text = \"选择城市\";\n          }\n\n          if (item.type == \"city\") {\n            item.text = \"选择县区\";\n          }\n\n          if (item.type == \"district\") {\n            item.text = \"选择街道\";\n          }\n\n          data.push(item);\n          data.map(item1 => {\n            item1.list = [];\n            return this.generate(list, item1.list, item1.id);\n          });\n        }\n      }\n\n      return data;\n    };\n\n    this.selectList = [];\n    this.addressList = [];\n    this.generate(addressInfo, this.addressList, \"0\");\n    console.log(this.addressList);\n    this.state = {\n      defaultText: \"选择省份/城市\",\n      province: \"\",\n      selectOne: \"\",\n      city: \"选择城市\",\n      district: \"选择区县\",\n      street: \"选择街道\",\n      selectList: [],\n      hotCity: [{\n        name: \"武汉市\",\n        id: \"11\",\n        superId: \"1\",\n        type: \"city\"\n      }, {\n        name: \"孝感市\",\n        id: \"12\",\n        superId: \"1\",\n        type: \"city\"\n      }, {\n        name: \"荆门市\",\n        id: \"13\",\n        superId: \"1\",\n        type: \"city\"\n      }, {\n        name: \"十堰市\",\n        id: \"14\",\n        superId: \"1\",\n        type: \"city\"\n      }, {\n        name: \"黄冈市\",\n        id: \"15\",\n        superId: \"1\",\n        type: \"city\"\n      }, {\n        name: \"天门市\",\n        id: \"16\",\n        superId: \"1\",\n        type: \"city\"\n      }, {\n        name: \"常德市\",\n        id: \"17\",\n        superId: \"2\",\n        type: \"city\"\n      }, {\n        name: \"长沙市\",\n        id: \"18\",\n        superId: \"2\",\n        type: \"city\"\n      }, {\n        name: \"郴州市\",\n        id: \"19\",\n        superId: \"2\",\n        type: \"city\"\n      }, {\n        name: \"衡阳市\",\n        id: \"20\",\n        superId: \"2\",\n        type: \"city\"\n      }, {\n        name: \"怀化市\",\n        id: \"21\",\n        superId: \"2\",\n        type: \"city\"\n      }, {\n        name: \"娄底市\",\n        id: \"22\",\n        superId: \"2\",\n        type: \"city\"\n      }],\n      isChoose: false,\n      addressList: this.addressList\n    };\n  } //处理数据结构，将数组处理成链表形式\n\n\n  //选择热门城市\n  chooseCity(text) {\n    var province = {};\n    var item = {};\n\n    for (var i = 0; i < this.addressList.length; i++) {\n      var itemOne = this.addressList[i]; //同等类型（都是省份或者都是城市）添加后替换掉原先的地区，清除掉后面的选项。\n\n      for (var j = 0; j < itemOne.list.length; j++) {\n        var itemOne1 = itemOne.list[j];\n\n        if (itemOne1.type == text.type && itemOne1.name.indexOf(text.name) > -1) {\n          province = itemOne;\n          item = itemOne1;\n          break;\n        }\n      }\n    }\n\n    this.selectList.push(province);\n    this.selectList.push(item);\n    this.selectList.push({\n      name: item.text,\n      list: item.list\n    });\n    this.setState({\n      selectOne: {\n        name: item.text,\n        list: item.list\n      },\n      isChoose: true,\n      addressList: item.list,\n      defaultText: item.text,\n      selectList: this.selectList\n    });\n  } //改变地址\n\n\n  changeAddress(item) {\n    this.setState({\n      selectOne: item\n    }); //找到对应的数据集\n\n    this.findOne(this.addressList, item);\n  }\n\n  findOne(list, item) {\n    if (list && list.length) {\n      for (var i = 0; i < list.length; i++) {\n        var item1 = list[i];\n\n        if (item.name.indexOf(\"选择\") > -1) {\n          this.setState({\n            addressList: item.list\n          });\n          break;\n        } else if (item.name == item1.name) {\n          this.setState({\n            addressList: list\n          });\n          break;\n        } else {\n          this.findOne(item1.list, item);\n        }\n      }\n    }\n  } //选择地区\n\n\n  chooseAddress(item) {\n    let getAddress = this.props.getAddress;\n\n    for (var i = 0; i < this.selectList.length; i++) {\n      var itemOne = this.selectList[i]; //将选择列表表带有选择的去掉。\n\n      if (itemOne.name.indexOf(\"选择\") > -1) {\n        this.selectList.splice(i, 1);\n        break;\n      } //同等类型（都是省份或者都是城市）添加后替换掉原先的地区，清除掉后面的选项。\n\n\n      if (itemOne.type == item.type) {\n        this.selectList[i] = item;\n        this.selectList = this.selectList.slice(0, i + 1);\n        this.selectList.push({\n          name: item.text,\n          list: item.list\n        });\n        break;\n      }\n    } //去重，只添加没有添加的地址\n\n\n    if (!this.selectList.includes(item)) {\n      this.selectList.push(item);\n      this.selectList.push({\n        name: item.text,\n        list: item.list\n      });\n    }\n\n    this.setState({\n      selectOne: {\n        name: item.text,\n        list: item.list\n      },\n      isChoose: true,\n      addressList: item.list,\n      defaultText: item.text,\n      selectList: this.selectList\n    }, () => {\n      if (item.list.length == 0) {\n        //过滤掉带有选择的值\n        this.state.selectList = this.state.selectList.filter(item => item.name && item.name.indexOf(\"选择\") < 0);\n        var obj = {};\n        obj.province = this.state.selectList[0] ? this.state.selectList[0].name : \"\";\n        obj.city = this.state.selectList[1] ? this.state.selectList[1].name : \"\";\n        obj.district = this.state.selectList[2] ? this.state.selectList[2].name : \"\";\n        obj.street = this.state.selectList[3] ? this.state.selectList[3].name : \"\";\n        getAddress(obj);\n      }\n    });\n  }\n\n  render() {\n    let _this$props = this.props,\n        closeModel = _this$props.closeModel,\n        prefixCls = _this$props.prefixCls;\n    return React.createElement(\"div\", {\n      className: prefixCls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: prefixCls + \"-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: prefixCls + \"-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: prefixCls + \"-title-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: prefixCls + \"-title-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"\\u8BF7\\u9009\\u62E9\"), React.createElement(\"img\", {\n      src: close,\n      alt: \"\",\n      className: prefixCls + \"-title-right\",\n      onClick: () => closeModel(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), this.state.isChoose ? React.createElement(\"div\", {\n      className: prefixCls + \"-already\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, this.state.selectList.map((item, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: item.name == this.state.selectOne.name ? prefixCls + \"-already-item-active\" : prefixCls + \"-already-item\",\n        onClick: () => this.changeAddress(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, item.name);\n    })) : React.createElement(\"div\", {\n      className: prefixCls + \"-city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: prefixCls + \"-city-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"\\u70ED\\u95E8\\u57CE\\u5E02\"), React.createElement(\"div\", {\n      className: prefixCls + \"-city-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.state.hotCity.map((item, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: prefixCls + \"-city-item\",\n        onClick: () => this.chooseCity(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, item.name);\n    }))), React.createElement(\"div\", {\n      className: prefixCls + \"-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: prefixCls + \"-select-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, this.state.defaultText), React.createElement(\"div\", {\n      className: prefixCls + \"-select-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, this.state.addressList.map((item, index) => {\n      return React.createElement(\"div\", {\n        className: prefixCls + \"-select-wrapper\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: () => this.chooseAddress(item, index),\n        className: item.name == this.state.selectOne.name ? prefixCls + \"-select-item-active\" : prefixCls + \"-select-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, item.name), item.name == this.state.selectOne.name ? React.createElement(\"img\", {\n        src: checked,\n        alt: \"\",\n        className: prefixCls + \"-select-item-checked\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }) : null);\n    })))));\n  }\n\n}\nAddress.defaultProps = defaultProps;","map":{"version":3,"sources":["C:\\Users\\caoxue\\Desktop\\secondary\\src\\share\\address\\index.js"],"names":["React","defaultProps","close","checked","addressInfo","Address","Component","constructor","props","generate","list","arr","superId","data","i","length","item","type","text","push","map","item1","id","selectList","addressList","console","log","state","defaultText","province","selectOne","city","district","street","hotCity","name","isChoose","chooseCity","itemOne","j","itemOne1","indexOf","setState","changeAddress","findOne","chooseAddress","getAddress","splice","slice","includes","filter","obj","render","closeModel","prefixCls","index"],"mappings":"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","sourcesContent":["/**\r\n * Created by Lenovo on 2019/10/15.\r\n */\r\nimport React from 'react';\r\nimport {defaultProps} from './defaultProps';\r\nimport './index.css';\r\nimport close from '../images/address/close-gray.png';\r\nimport checked from '../images/address/checked.png';\r\nimport {addressInfo} from './addressInfo';\r\nexport default class Address extends React.Component {\r\n    static defaultProps = defaultProps;\r\n    constructor(props){\r\n        super(props);\r\n        this.selectList = [];\r\n        this.addressList = [];\r\n        this.generate(addressInfo,this.addressList,\"0\");\r\n        console.log(this.addressList);\r\n        this.state={\r\n            defaultText:\"选择省份/城市\",\r\n            province:\"\",\r\n            selectOne:\"\",\r\n            city:\"选择城市\",\r\n            district:\"选择区县\",\r\n            street:\"选择街道\",\r\n            selectList:[],\r\n            hotCity:[\r\n                {name:\"武汉市\",id:\"11\",superId:\"1\",type:\"city\"},\r\n                {name:\"孝感市\",id:\"12\",superId:\"1\",type:\"city\"},\r\n                {name:\"荆门市\",id:\"13\",superId:\"1\",type:\"city\"},\r\n                {name:\"十堰市\",id:\"14\",superId:\"1\",type:\"city\"},\r\n                {name:\"黄冈市\",id:\"15\",superId:\"1\",type:\"city\"},\r\n                {name:\"天门市\",id:\"16\",superId:\"1\",type:\"city\"},\r\n\r\n                {name:\"常德市\",id:\"17\",superId:\"2\",type:\"city\"},\r\n                {name:\"长沙市\",id:\"18\",superId:\"2\",type:\"city\"},\r\n                {name:\"郴州市\",id:\"19\",superId:\"2\",type:\"city\"},\r\n                {name:\"衡阳市\",id:\"20\",superId:\"2\",type:\"city\"},\r\n                {name:\"怀化市\",id:\"21\",superId:\"2\",type:\"city\"},\r\n                {name:\"娄底市\",id:\"22\",superId:\"2\",type:\"city\"},\r\n            ],\r\n            isChoose:false,\r\n            addressList:this.addressList\r\n        }\r\n    }\r\n    //处理数据结构，将数组处理成链表形式\r\n    generate = (list,arr,superId)=>{\r\n        var data = arr||[];\r\n        for(var i =0;i<list.length;i++){\r\n            var item = list[i];\r\n            if(item.superId == superId){\r\n                if(item.type == \"province\"){\r\n                    item.text = \"选择城市\";\r\n                }\r\n                if(item.type == \"city\"){\r\n                    item.text = \"选择县区\";\r\n                }\r\n                if(item.type == \"district\"){\r\n                    item.text = \"选择街道\";\r\n                }\r\n                data.push(item);\r\n                data.map((item1)=>{\r\n                    item1.list = [];\r\n                    return this.generate(list,item1.list,item1.id);\r\n                })\r\n            }\r\n        }\r\n        return data;\r\n    };\r\n    //选择热门城市\r\n    chooseCity(text){\r\n        var province = {};\r\n        var item = {};\r\n        for(var i=0;i<this.addressList.length;i++){\r\n            var itemOne = this.addressList[i];\r\n            //同等类型（都是省份或者都是城市）添加后替换掉原先的地区，清除掉后面的选项。\r\n            for(var j=0;j<itemOne.list.length;j++){\r\n                var itemOne1 = itemOne.list[j];\r\n                if(itemOne1.type == text.type && itemOne1.name.indexOf(text.name)>-1){\r\n                    province = itemOne;\r\n                    item = itemOne1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.selectList.push(province);\r\n        this.selectList.push(item);\r\n        this.selectList.push({name:item.text,list:item.list});\r\n        this.setState({\r\n            selectOne:{name:item.text,list:item.list},\r\n            isChoose:true,\r\n            addressList:item.list,\r\n            defaultText:item.text,\r\n            selectList:this.selectList,\r\n        })\r\n    }\r\n    //改变地址\r\n    changeAddress(item){\r\n        this.setState({\r\n            selectOne:item\r\n        });\r\n        //找到对应的数据集\r\n        this.findOne(this.addressList,item)\r\n    }\r\n    findOne(list,item){\r\n        if(list && list.length){\r\n            for(var i=0;i<list.length;i++){\r\n                var item1 = list[i];\r\n                if(item.name.indexOf(\"选择\")>-1){\r\n                    this.setState({\r\n                        addressList:item.list\r\n                    });\r\n                    break;\r\n                }else if(item.name == item1.name){\r\n                    this.setState({\r\n                        addressList:list\r\n                    });\r\n                    break;\r\n                }else {\r\n                    this.findOne(item1.list,item)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //选择地区\r\n    chooseAddress(item){\r\n        let {getAddress} = this.props;\r\n        for(var i=0;i<this.selectList.length;i++){\r\n                var itemOne = this.selectList[i];\r\n                //将选择列表表带有选择的去掉。\r\n                if(itemOne.name.indexOf(\"选择\")>-1){\r\n                    this.selectList.splice(i,1);\r\n                    break;\r\n                }\r\n                //同等类型（都是省份或者都是城市）添加后替换掉原先的地区，清除掉后面的选项。\r\n                if(itemOne.type == item.type){\r\n                    this.selectList[i] = item;\r\n                    this.selectList = this.selectList.slice(0,i+1);\r\n                    this.selectList.push({name:item.text,list:item.list});\r\n                    break;\r\n                }\r\n        }\r\n        //去重，只添加没有添加的地址\r\n        if(!this.selectList.includes(item)){\r\n            this.selectList.push(item);\r\n            this.selectList.push({name:item.text,list:item.list});\r\n        }\r\n        this.setState({\r\n            selectOne:{name:item.text,list:item.list},\r\n            isChoose:true,\r\n            addressList:item.list,\r\n            defaultText:item.text,\r\n            selectList:this.selectList,\r\n        },()=>{\r\n            if(item.list.length == 0){\r\n                //过滤掉带有选择的值\r\n                this.state.selectList = this.state.selectList.filter((item)=>item.name && item.name.indexOf(\"选择\")<0);\r\n                var obj = {};\r\n                obj.province = this.state.selectList[0]?this.state.selectList[0].name:\"\";\r\n                obj.city = this.state.selectList[1]?this.state.selectList[1].name:\"\";\r\n                obj.district = this.state.selectList[2]?this.state.selectList[2].name:\"\";\r\n                obj.street = this.state.selectList[3]?this.state.selectList[3].name:\"\";\r\n                getAddress(obj);\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        let {closeModel,prefixCls} = this.props;\r\n        return(\r\n            <div className={prefixCls}>\r\n                <div className={prefixCls+\"-wrapper\"}>\r\n                <div className={prefixCls+\"-title\"}>\r\n                    <div className={prefixCls+\"-title-left\"}></div>\r\n                    <div className={prefixCls+\"-title-text\"}>请选择</div>\r\n                    <img src={close} alt=\"\" className={prefixCls+\"-title-right\"} onClick={()=>closeModel()}/>\r\n                </div>\r\n                    {this.state.isChoose?\r\n                        <div className={prefixCls+\"-already\"}>\r\n                            {this.state.selectList.map((item,index)=>{\r\n                            return <div key={index}\r\n                                       className={item.name == this.state.selectOne.name?prefixCls+\"-already-item-active\":prefixCls+\"-already-item\"}\r\n                                       onClick={()=>this.changeAddress(item)}\r\n                            >{item.name}</div>\r\n                        })}\r\n                        </div>:\r\n                        <div className={prefixCls+\"-city\"}>\r\n                            <div className={prefixCls+\"-city-text\"}>热门城市</div>\r\n                            <div className={prefixCls+\"-city-list\"}>\r\n                                {\r\n                                    this.state.hotCity.map((item,index)=>{\r\n                                        return <div key={index} className={prefixCls+\"-city-item\"} onClick={()=>this.chooseCity(item)}>{item.name}</div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <div className={prefixCls+\"-select\"}>\r\n                            <div className={prefixCls+\"-select-text\"}>{this.state.defaultText}</div>\r\n                            <div className={prefixCls+\"-select-list\"}>\r\n                                {\r\n                                    this.state.addressList.map((item,index)=>{\r\n                                        return <div className={prefixCls+\"-select-wrapper\"} key={index}>\r\n                                        <div onClick={()=>this.chooseAddress(item,index)}\r\n                                             className={item.name == this.state.selectOne.name?prefixCls+\"-select-item-active\":prefixCls+\"-select-item\"}>{item.name}</div>\r\n                                            {item.name == this.state.selectOne.name? <img src={checked} alt=\"\" className={prefixCls+\"-select-item-checked\"}/>:null}\r\n                                        </div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}