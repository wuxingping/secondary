{"ast":null,"code":"/**\r\n * Created by Lenovo on 2019/8/6.\r\n */\nimport Mock from 'mockjs';\nimport Config from './envConfig';\nimport banner from './images/index/banner.jpg';\nconst urlPrefix = \"http://mock/\"; // const url = {\n//     //首页模块接口\n//     bannerList: urlPrefix+'index/bannerList',\n//     productTypeList: urlPrefix+'index/productTypeList',\n//     productList: urlPrefix+'index/productList',\n//     productListByKey: urlPrefix+'index/productListByKey',\n//     productListByType: urlPrefix+'index/productListByType',\n//\n//     //发布模块接口\n//     publishProduct: urlPrefix+'publish/publishProduct',\n//\n//     //消息模块接口\n//     messageList: urlPrefix+'message/messageList',\n//     getMessageDetailById: urlPrefix+'message/getMessageDetailById',\n//     sendMessage: urlPrefix+'message/sendMessage',\n//\n//     //登陆与注册模块接口\n//     register: urlPrefix+'register',\n//     getSmsCode: urlPrefix+'register/getSmsCode',\n//     login: urlPrefix+'login',\n//\n//     //个人中心模块接口\n//     getProductByState: urlPrefix+'personal/getProductByState',\n//     updatePwd: urlPrefix+'personal/updatePwd',\n//     retrievePwd: urlPrefix+'personal/retrievePwd',\n//     updateCustomerInfo: urlPrefix+'personal/updateCustomerInfo',\n//     updateProductInfo: urlPrefix+'personal/updateProductInfo',\n//     logout: urlPrefix+'personal/logout',\n// }\n// Mock.mock(url.productList, {data: {\n//     'result|5': [{\n//         'id|+1': 1,\n//         'productImg': Mock.Random.image('180x200'),\n//         'productDes|1': ['九成新哦，先到先得','貂皮大衣','八成新','这个东西好好看的'],\n//         'productPrice|18-280': 20\n//     }]\n// }});\n// Mock.mock(url.productListByKey, {data: {\n//     'result|5': [{\n//         'id|+1': 1,\n//         'productImg': Mock.Random.image('180x200'),\n//         'productDes|1': ['九成新哦，先到先得','貂皮大衣','八成新','这个东西好好看的'],\n//         'productPrice|18-280': 20\n//     }]\n// }});\n// Mock.mock(url.productListByType, {data: {\n//     'result|5': [{\n//         'id|+1': 1,\n//         'productImg': Mock.Random.image('180x200'),\n//         'productDes|1': ['九成新哦，先到先得','貂皮大衣','八成新','这个东西好好看的'],\n//         'productPrice|18-280': 20\n//     }]\n// }});\n// Mock.mock(url.productTypeList, {data: {\n//     'result|10': [{\n//         'id|+1': 1,\n//         'name|1': ['数码','服装','居家','美妆','家电','玩具','运动'],\n//     }]\n// }})\n// Mock.mock(url.bannerList, {data: {\n//     'result|5': [{\n//         'id|+1': 1,\n//         'image|1': [banner,banner,banner],\n//     }]\n// }})\n// Mock.mock(url.publishProduct, {data: {\n//     'result|10': [{\n//         'id|+1': 1,\n//         'image': Mock.Random.image('180x200'),\n//     }]\n// }})\n//\n// // export let praiseList = [{avatar:avatar}];\n// // export let commentList = [{avatar:avatar,comment:'穿过几次？',userName:'超人'}];\n//\n//\n// Mock.mock(url.register, {\n//     'code': 0,\n//     'msg': \"注册成功\",\n// })\n// Mock.mock(url.getSmsCode, {\n//     'smsCode': \"123456\",\n// })\n// Mock.mock(url.login, {\n//     'code': 0,\n//     'msg': \"注册成功\",\n//     'data':{\n//         token:\"wxopoopddd\",\n//         nickName:'杏子',\n//         userAvatar:\"\",\n//     }\n// })","map":{"version":3,"sources":["C:\\Users\\caoxue\\Desktop\\secondary\\secondary\\src\\mock.js"],"names":["Mock","Config","banner","urlPrefix"],"mappings":"AAAA;;;AAGA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,MAAMC,SAAS,GAAG,cAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/**\r\n * Created by Lenovo on 2019/8/6.\r\n */\r\nimport Mock from 'mockjs'\r\nimport Config from './envConfig';\r\nimport banner from './images/index/banner.jpg'\r\nconst urlPrefix = \"http://mock/\";\r\n// const url = {\r\n//     //首页模块接口\r\n//     bannerList: urlPrefix+'index/bannerList',\r\n//     productTypeList: urlPrefix+'index/productTypeList',\r\n//     productList: urlPrefix+'index/productList',\r\n//     productListByKey: urlPrefix+'index/productListByKey',\r\n//     productListByType: urlPrefix+'index/productListByType',\r\n//\r\n//     //发布模块接口\r\n//     publishProduct: urlPrefix+'publish/publishProduct',\r\n//\r\n//     //消息模块接口\r\n//     messageList: urlPrefix+'message/messageList',\r\n//     getMessageDetailById: urlPrefix+'message/getMessageDetailById',\r\n//     sendMessage: urlPrefix+'message/sendMessage',\r\n//\r\n//     //登陆与注册模块接口\r\n//     register: urlPrefix+'register',\r\n//     getSmsCode: urlPrefix+'register/getSmsCode',\r\n//     login: urlPrefix+'login',\r\n//\r\n//     //个人中心模块接口\r\n//     getProductByState: urlPrefix+'personal/getProductByState',\r\n//     updatePwd: urlPrefix+'personal/updatePwd',\r\n//     retrievePwd: urlPrefix+'personal/retrievePwd',\r\n//     updateCustomerInfo: urlPrefix+'personal/updateCustomerInfo',\r\n//     updateProductInfo: urlPrefix+'personal/updateProductInfo',\r\n//     logout: urlPrefix+'personal/logout',\r\n// }\r\n// Mock.mock(url.productList, {data: {\r\n//     'result|5': [{\r\n//         'id|+1': 1,\r\n//         'productImg': Mock.Random.image('180x200'),\r\n//         'productDes|1': ['九成新哦，先到先得','貂皮大衣','八成新','这个东西好好看的'],\r\n//         'productPrice|18-280': 20\r\n//     }]\r\n// }});\r\n// Mock.mock(url.productListByKey, {data: {\r\n//     'result|5': [{\r\n//         'id|+1': 1,\r\n//         'productImg': Mock.Random.image('180x200'),\r\n//         'productDes|1': ['九成新哦，先到先得','貂皮大衣','八成新','这个东西好好看的'],\r\n//         'productPrice|18-280': 20\r\n//     }]\r\n// }});\r\n// Mock.mock(url.productListByType, {data: {\r\n//     'result|5': [{\r\n//         'id|+1': 1,\r\n//         'productImg': Mock.Random.image('180x200'),\r\n//         'productDes|1': ['九成新哦，先到先得','貂皮大衣','八成新','这个东西好好看的'],\r\n//         'productPrice|18-280': 20\r\n//     }]\r\n// }});\r\n// Mock.mock(url.productTypeList, {data: {\r\n//     'result|10': [{\r\n//         'id|+1': 1,\r\n//         'name|1': ['数码','服装','居家','美妆','家电','玩具','运动'],\r\n//     }]\r\n// }})\r\n// Mock.mock(url.bannerList, {data: {\r\n//     'result|5': [{\r\n//         'id|+1': 1,\r\n//         'image|1': [banner,banner,banner],\r\n//     }]\r\n// }})\r\n// Mock.mock(url.publishProduct, {data: {\r\n//     'result|10': [{\r\n//         'id|+1': 1,\r\n//         'image': Mock.Random.image('180x200'),\r\n//     }]\r\n// }})\r\n//\r\n// // export let praiseList = [{avatar:avatar}];\r\n// // export let commentList = [{avatar:avatar,comment:'穿过几次？',userName:'超人'}];\r\n//\r\n//\r\n// Mock.mock(url.register, {\r\n//     'code': 0,\r\n//     'msg': \"注册成功\",\r\n// })\r\n// Mock.mock(url.getSmsCode, {\r\n//     'smsCode': \"123456\",\r\n// })\r\n// Mock.mock(url.login, {\r\n//     'code': 0,\r\n//     'msg': \"注册成功\",\r\n//     'data':{\r\n//         token:\"wxopoopddd\",\r\n//         nickName:'杏子',\r\n//         userAvatar:\"\",\r\n//     }\r\n// })"]},"metadata":{},"sourceType":"module"}