{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caoxue\\\\Desktop\\\\secondary\\\\src\\\\share\\\\type\\\\index.js\";\n\n/**\r\n * Created by Lenovo on 2019/8/18.\r\n */\nimport React from 'react';\nimport './index.css';\nimport { defaultProps } from './defaultProps';\nexport default class Type extends React.Component {\n  constructor(props) {\n    super(props);\n    this.scrollLeft = 0;\n    this.state = {\n      activeType: 0 //默认选中第一个类型\n\n    };\n  } //点击类型时触发\n\n\n  onTypeClick(index, item, e) {\n    var offsetLeft = e.target.offsetLeft;\n    const typeList = this.props.typeList;\n    this.setState({\n      activeType: index\n    });\n    var count = 0;\n    var scroll = this.refs.scroll;\n    var slideHalf = window.innerWidth / 2;\n\n    if (index <= 3) {\n      scroll.scrollLeft = 0;\n    }\n\n    if (index >= typeList.length - 3) {\n      scroll.scrollLeft = scroll.scrollWidth;\n    }\n\n    if (index > 3 && index < typeList.length - 3) {\n      var trueScollLeft = offsetLeft;\n      trueScollLeft = trueScollLeft - count - this.scrollLeft;\n      console.log(\"trueScollLeft:\" + trueScollLeft);\n      console.log(\"slideHalf:\" + slideHalf);\n      var timer = setInterval(() => {\n        // offsetLeft 距离左边界的距离\n        // slideHalf 屏幕一半宽度\n        if (trueScollLeft >= slideHalf) {\n          if (count <= trueScollLeft - slideHalf) {\n            scroll.scrollTo(this.scrollLeft + count, 0);\n            count++;\n          } else {\n            clearInterval(timer);\n          }\n\n          trueScollLeft = trueScollLeft - count - this.scrollLeft;\n        } else {\n          if (count <= slideHalf - trueScollLeft) {\n            scroll.scrollTo(this.scrollLeft - count, 0);\n            count++;\n          } else {\n            clearInterval(timer);\n          }\n\n          trueScollLeft = trueScollLeft + count + this.scrollLeft;\n        }\n      }, 10);\n      console.log(scroll.scrollLeft);\n      this.scrollLeft = scroll.scrollLeft;\n      console.log(this.scrollLeft);\n    }\n\n    const onTypeClick = this.props.onTypeClick;\n\n    if (onTypeClick) {\n      onTypeClick(item);\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          prefixCls = _this$props.prefixCls,\n          typeList = _this$props.typeList;\n    return React.createElement(\"div\", {\n      className: prefixCls,\n      ref: \"scroll\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, typeList.map((item, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: this.state.activeType == index ? prefixCls + \"-item-active\" : prefixCls + \"-item\",\n        onClick: e => this.onTypeClick(index, item, e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, item.name);\n    }));\n  }\n\n}\nType.defaultProps = defaultProps;","map":{"version":3,"sources":["C:\\Users\\caoxue\\Desktop\\secondary\\src\\share\\type\\index.js"],"names":["React","defaultProps","Type","Component","constructor","props","scrollLeft","state","activeType","onTypeClick","index","item","e","offsetLeft","target","typeList","setState","count","scroll","refs","slideHalf","window","innerWidth","length","scrollWidth","trueScollLeft","console","log","timer","setInterval","scrollTo","clearInterval","render","prefixCls","map","name"],"mappings":"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","sourcesContent":["/**\r\n * Created by Lenovo on 2019/8/18.\r\n */\r\nimport React from 'react';\r\nimport './index.css';\r\nimport {defaultProps} from './defaultProps';\r\nexport default class Type extends React.Component {\r\n    static defaultProps = defaultProps;\r\n    constructor(props) {\r\n        super(props);\r\n        this.scrollLeft = 0;\r\n        this.state = {\r\n            activeType:0//默认选中第一个类型\r\n        }\r\n    }\r\n    //点击类型时触发\r\n    onTypeClick(index,item,e) {\r\n        var offsetLeft = e.target.offsetLeft;\r\n        const {typeList} =this.props;\r\n        this.setState({\r\n            activeType:index\r\n        });\r\n        var count = 0;\r\n        var scroll = this.refs.scroll;\r\n        var slideHalf = window.innerWidth/2;\r\n        if(index<=3){\r\n            scroll.scrollLeft = 0;\r\n        }\r\n        if(index>=typeList.length-3){\r\n            scroll.scrollLeft = scroll.scrollWidth;\r\n        }\r\n        if(index>3 && index<typeList.length-3){\r\n            var trueScollLeft = offsetLeft;\r\n            trueScollLeft = trueScollLeft - count - this.scrollLeft;\r\n            console.log(\"trueScollLeft:\"+ trueScollLeft);\r\n            console.log(\"slideHalf:\"+ slideHalf);\r\n            var timer = setInterval(()=>{\r\n                // offsetLeft 距离左边界的距离\r\n                // slideHalf 屏幕一半宽度\r\n                if (trueScollLeft >= slideHalf) {\r\n                    if(count <= trueScollLeft-slideHalf){\r\n                        scroll.scrollTo(this.scrollLeft + count,0);\r\n                        count++;\r\n                    } else {\r\n                        clearInterval(timer)\r\n                    }\r\n                    trueScollLeft = trueScollLeft - count - this.scrollLeft;\r\n                } else {\r\n                    if(count <= slideHalf-trueScollLeft){\r\n                        scroll.scrollTo(this.scrollLeft - count,0);\r\n                        count++;\r\n                    }else {\r\n                        clearInterval(timer)\r\n                    }\r\n                    trueScollLeft = trueScollLeft + count + this.scrollLeft;\r\n                }\r\n\r\n            },10);\r\n            console.log(scroll.scrollLeft);\r\n            this.scrollLeft = scroll.scrollLeft;\r\n            console.log(this.scrollLeft);\r\n        }\r\n        const {onTypeClick} =this.props;\r\n        if (onTypeClick) {\r\n            onTypeClick(item);\r\n        }\r\n    }\r\n    render() {\r\n        const {prefixCls,typeList} =this.props;\r\n        return(\r\n                <div className={prefixCls} ref=\"scroll\">\r\n                    {typeList.map((item,index)=>{\r\n                        return(\r\n                            <div key={index} className={this.state.activeType == index?prefixCls+\"-item-active\":prefixCls+\"-item\"} onClick={(e)=>this.onTypeClick(index,item,e)}>{item.name}</div>\r\n                        )\r\n                    })}\r\n                    </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}