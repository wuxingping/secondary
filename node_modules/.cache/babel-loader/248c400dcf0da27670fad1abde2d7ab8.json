{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caoxue\\\\Desktop\\\\secondary\\\\secondary\\\\src\\\\pages\\\\message\\\\pullToRefresh.js\";\n\n/**\r\n * Created by Lenovo on 2019/9/15.\r\n */\nimport { PullToRefresh, ListView, Button } from 'antd-mobile';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { getData, goNext, getTimeFormat, getTimeHour, autoTextarea } from '../../utils';\nconst data = [{\n  img: 'https://zos.alipayobjects.com/rmsportal/dKbkpPXKfvZzWCM.png',\n  title: 'Meet hotel',\n  des: '不是所有的兼职汪都需要风吹日晒'\n}, {\n  img: 'https://zos.alipayobjects.com/rmsportal/XmwCzSeJiqpkuMB.png',\n  title: 'McDonald\\'s invites you',\n  des: '不是所有的兼职汪都需要风吹日晒'\n}, {\n  img: 'https://zos.alipayobjects.com/rmsportal/hfVtzEhPzTUewPm.png',\n  title: 'Eat the week',\n  des: '不是所有的兼职汪都需要风吹日晒'\n}];\nconst NUM_ROWS = 20;\nlet pageIndex = 0;\n\nfunction genData(pIndex = 0) {\n  const dataArr = [];\n\n  for (let i = 0; i < NUM_ROWS; i++) {\n    dataArr.push(\"row - \".concat(pIndex * NUM_ROWS + i));\n  }\n\n  return dataArr;\n}\n\nexport default class PullToRefreshScroll extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onRefresh = () => {\n      this.setState({\n        refreshing: true,\n        isLoading: true\n      }); // simulate initial Ajax\n\n      setTimeout(() => {\n        this.rData = genData();\n        this.setState({\n          dataSource: this.state.dataSource.cloneWithRows(this.rData),\n          refreshing: false,\n          isLoading: false\n        });\n      }, 600);\n    };\n\n    const dataSource = new ListView.DataSource({\n      rowHasChanged: (row1, row2) => row1 !== row2\n    });\n    this.state = {\n      dataSource,\n      refreshing: true,\n      isLoading: true,\n      height: document.documentElement.clientHeight,\n      useBodyScroll: false\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.state.useBodyScroll) {\n      document.body.style.overflow = 'auto';\n    } else {\n      document.body.style.overflow = 'hidden';\n    }\n  }\n\n  getChatDetailList() {\n    getData({\n      method: 'post',\n      url: 'getChatDetailList',\n      data: {\n        chatId: this.item.chatId\n      },\n      successCB: res => {\n        var list = res.result.list;\n        list.map(item => {\n          if (item.userId != this.user.userId) {\n            item.type = \"received\";\n          }\n\n          var nowTime = new Date().getTime();\n          var tomorrow = nowTime - 12 * 60 * 60 * 1000;\n\n          if (item.createTime < tomorrow) {\n            item.time = getTimeFormat(item.createTime);\n          } else {\n            item.time = getTimeHour(item.createTime);\n          }\n        });\n        console.log(list);\n        list = list.reverse();\n        this.setState({\n          chatList: list\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    const hei = this.state.height - ReactDOM.findDOMNode(this.lv).offsetTop;\n    this.getChatDetailList();\n    setTimeout(() => {\n      this.rData = genData();\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRows(genData()),\n        height: hei,\n        refreshing: false,\n        isLoading: false\n      });\n    }, 1500);\n  }\n\n  render() {\n    const separator = (sectionID, rowID) => React.createElement(\"div\", {\n      key: \"\".concat(sectionID, \"-\").concat(rowID),\n      style: {\n        backgroundColor: '#F5F5F9',\n        height: 8,\n        borderTop: '1px solid #ECECED',\n        borderBottom: '1px solid #ECECED'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    });\n\n    let index = data.length - 1;\n\n    const row = (item, sectionID, rowID) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"cm-m-018\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, item.type == \"received\" ? React.createElement(\"div\", {\n        className: \"cm-flex-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cm-tx-c cm-mtb-018\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, item.time), React.createElement(\"div\", {\n        className: \"cm-flex cm-ai-c cm-tx-c cm-as-fs detail-mr-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.item.anotherUserAvatar || this.item.publishUserAvatar,\n        alt: \"\",\n        className: \"cm-img-06 cm-as-fs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"cm-flex cm-flex-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"detail-triangle-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"detail-chat-height cm-pad-10 cm-bc-white cm-tx-l\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, item.anotherContent || item.content)))) : React.createElement(\"div\", {\n        className: \"cm-flex-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cm-tx-c cm-mtb-018\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, item.time), React.createElement(\"div\", {\n        className: \"cm-flex cm-ai-c cm-tx-c cm-as-fe detail-ml-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cm-flex cm-flex-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \" detail-chat-height cm-pad-10 cm-bc-ddd cm-tx-l\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, item.content), React.createElement(\"div\", {\n        className: \"detail-triangle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(\"img\", {\n        src: user.userAvatar,\n        alt: \"\",\n        className: \"cm-img-06 cm-as-fs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }))));\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        margin: '30px 15px'\n      },\n      inline: true,\n      onClick: () => this.setState({\n        useBodyScroll: !this.state.useBodyScroll\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.state.useBodyScroll ? 'useBodyScroll' : 'partial scroll'), React.createElement(ListView, {\n      key: this.state.useBodyScroll ? '0' : '1',\n      ref: el => this.lv = el,\n      dataSource: this.state.dataSource,\n      renderRow: row,\n      renderSeparator: separator,\n      useBodyScroll: this.state.useBodyScroll,\n      style: this.state.useBodyScroll ? {} : {\n        height: this.state.height,\n        border: '1px solid #ddd',\n        margin: '5px 0'\n      },\n      pullToRefresh: React.createElement(PullToRefresh, {\n        refreshing: this.state.refreshing,\n        onRefresh: this.onRefresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }),\n      pageSize: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\caoxue\\Desktop\\secondary\\secondary\\src\\pages\\message\\pullToRefresh.js"],"names":["PullToRefresh","ListView","Button","React","ReactDOM","getData","goNext","getTimeFormat","getTimeHour","autoTextarea","data","img","title","des","NUM_ROWS","pageIndex","genData","pIndex","dataArr","i","push","PullToRefreshScroll","Component","constructor","props","onRefresh","setState","refreshing","isLoading","setTimeout","rData","dataSource","state","cloneWithRows","DataSource","rowHasChanged","row1","row2","height","document","documentElement","clientHeight","useBodyScroll","componentDidUpdate","body","style","overflow","getChatDetailList","method","url","chatId","item","successCB","res","list","result","map","userId","user","type","nowTime","Date","getTime","tomorrow","createTime","time","console","log","reverse","chatList","componentDidMount","hei","findDOMNode","lv","offsetTop","render","separator","sectionID","rowID","backgroundColor","borderTop","borderBottom","index","length","row","anotherUserAvatar","publishUserAvatar","anotherContent","content","userAvatar","margin","el","border"],"mappings":"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","sourcesContent":["/**\r\n * Created by Lenovo on 2019/9/15.\r\n */\r\nimport { PullToRefresh, ListView, Button } from 'antd-mobile';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {getData, goNext, getTimeFormat, getTimeHour,autoTextarea} from '../../utils';\r\nconst data = [\r\n    {\r\n        img: 'https://zos.alipayobjects.com/rmsportal/dKbkpPXKfvZzWCM.png',\r\n        title: 'Meet hotel',\r\n        des: '不是所有的兼职汪都需要风吹日晒',\r\n    },\r\n    {\r\n        img: 'https://zos.alipayobjects.com/rmsportal/XmwCzSeJiqpkuMB.png',\r\n        title: 'McDonald\\'s invites you',\r\n        des: '不是所有的兼职汪都需要风吹日晒',\r\n    },\r\n    {\r\n        img: 'https://zos.alipayobjects.com/rmsportal/hfVtzEhPzTUewPm.png',\r\n        title: 'Eat the week',\r\n        des: '不是所有的兼职汪都需要风吹日晒',\r\n    },\r\n];\r\nconst NUM_ROWS = 20;\r\nlet pageIndex = 0;\r\n\r\nfunction genData(pIndex = 0) {\r\n    const dataArr = [];\r\n    for (let i = 0; i < NUM_ROWS; i++) {\r\n        dataArr.push(`row - ${(pIndex * NUM_ROWS) + i}`);\r\n    }\r\n    return dataArr;\r\n}\r\n\r\nexport default class PullToRefreshScroll extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const dataSource = new ListView.DataSource({\r\n            rowHasChanged: (row1, row2) => row1 !== row2,\r\n        });\r\n\r\n        this.state = {\r\n            dataSource,\r\n            refreshing: true,\r\n            isLoading: true,\r\n            height: document.documentElement.clientHeight,\r\n            useBodyScroll: false,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.useBodyScroll) {\r\n            document.body.style.overflow = 'auto';\r\n        } else {\r\n            document.body.style.overflow = 'hidden';\r\n        }\r\n    }\r\n    getChatDetailList() {\r\n        getData({\r\n            method: 'post',\r\n            url: 'getChatDetailList',\r\n            data: {\r\n                chatId:this.item.chatId\r\n            },\r\n            successCB: (res) => {\r\n                var list = res.result.list;\r\n                list.map((item)=>{\r\n                    if(item.userId != this.user.userId){\r\n                        item.type=\"received\";\r\n                    }\r\n                    var nowTime = (new Date()).getTime();\r\n                    var tomorrow = nowTime - 12*60*60*1000;\r\n                    if(item.createTime<tomorrow){\r\n                        item.time = getTimeFormat(item.createTime);\r\n                    }else {\r\n                        item.time = getTimeHour(item.createTime)\r\n                    }\r\n                });\r\n                console.log(list);\r\n                list = list.reverse();\r\n                this.setState({\r\n                    chatList:list\r\n                })\r\n            }\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        const hei = this.state.height - ReactDOM.findDOMNode(this.lv).offsetTop;\r\n        this.getChatDetailList();\r\n        setTimeout(() => {\r\n            this.rData = genData();\r\n            this.setState({\r\n                dataSource: this.state.dataSource.cloneWithRows(genData()),\r\n                height: hei,\r\n                refreshing: false,\r\n                isLoading: false,\r\n            });\r\n        }, 1500);\r\n    }\r\n\r\n    onRefresh = () => {\r\n        this.setState({ refreshing: true, isLoading: true });\r\n        // simulate initial Ajax\r\n        setTimeout(() => {\r\n            this.rData = genData();\r\n            this.setState({\r\n                dataSource: this.state.dataSource.cloneWithRows(this.rData),\r\n                refreshing: false,\r\n                isLoading: false,\r\n            });\r\n        }, 600);\r\n    };\r\n\r\n    render() {\r\n        const separator = (sectionID, rowID) => (\r\n            <div\r\n                key={`${sectionID}-${rowID}`}\r\n                style={{\r\n                    backgroundColor: '#F5F5F9',\r\n                    height: 8,\r\n                    borderTop: '1px solid #ECECED',\r\n                    borderBottom: '1px solid #ECECED',\r\n                }}\r\n            />\r\n        );\r\n        let index = data.length - 1;\r\n        const row = (item, sectionID, rowID) => {\r\n            return (\r\n                <div key={index} className=\"cm-m-018\">\r\n                    {item.type == \"received\"?\r\n                        <div className=\"cm-flex-column\">\r\n                            <div className=\"cm-tx-c cm-mtb-018\">{item.time}</div>\r\n                            <div className=\"cm-flex cm-ai-c cm-tx-c cm-as-fs detail-mr-30\">\r\n                                <img src={this.item.anotherUserAvatar||this.item.publishUserAvatar} alt=\"\" className=\"cm-img-06 cm-as-fs\"/>\r\n                                <div className=\"cm-flex cm-flex-1\">\r\n                                    <div className=\"detail-triangle-right\"></div>\r\n                                    <div className=\"detail-chat-height cm-pad-10 cm-bc-white cm-tx-l\">{item.anotherContent||item.content}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className=\"cm-flex-column\">\r\n                            <div className=\"cm-tx-c cm-mtb-018\">{item.time}</div>\r\n                            <div className=\"cm-flex cm-ai-c cm-tx-c cm-as-fe detail-ml-30\">\r\n                                <div className=\"cm-flex cm-flex-1\">\r\n                                    <div className=\" detail-chat-height cm-pad-10 cm-bc-ddd cm-tx-l\">{item.content}</div>\r\n                                    <div className=\"detail-triangle\"></div>\r\n                                </div>\r\n                                <img src={user.userAvatar} alt=\"\" className=\"cm-img-06 cm-as-fs\"/>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            );\r\n        };\r\n        return (<div>\r\n            <Button\r\n                style={{ margin: '30px 15px' }}\r\n                inline\r\n                onClick={() => this.setState({ useBodyScroll: !this.state.useBodyScroll })}\r\n            >\r\n                {this.state.useBodyScroll ? 'useBodyScroll' : 'partial scroll'}\r\n            </Button>\r\n            <ListView\r\n                key={this.state.useBodyScroll ? '0' : '1'}\r\n                ref={el => this.lv = el}\r\n                dataSource={this.state.dataSource}\r\n                renderRow={row}\r\n                renderSeparator={separator}\r\n                useBodyScroll={this.state.useBodyScroll}\r\n                style={this.state.useBodyScroll ? {} : {\r\n                        height: this.state.height,\r\n                        border: '1px solid #ddd',\r\n                        margin: '5px 0',\r\n                    }}\r\n                pullToRefresh={<PullToRefresh\r\n                    refreshing={this.state.refreshing}\r\n                    onRefresh={this.onRefresh}\r\n                />}\r\n                pageSize={5}\r\n            />\r\n        </div>);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}