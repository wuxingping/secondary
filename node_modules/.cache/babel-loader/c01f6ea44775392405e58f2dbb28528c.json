{"ast":null,"code":"/**\r\n * Created by Lenovo on 2019/8/7.\r\n */\nimport axios from \"axios\";\nimport Config from './envConfig';\nimport { Toast } from 'antd-mobile';\nexport function getData(obj) {\n  debugger;\n  Toast.loading('加载中...', 0);\n  axios({\n    method: obj.method,\n    url: Config.serverUrl + obj.url,\n    data: obj.data,\n    header: {\n      deviceId: '11',\n      requestId: \"66\",\n      clientVersion: \"66\",\n      timestamp: '66'\n    }\n  }).then(function (res) {\n    if (obj.successCB) {\n      Toast.hide();\n      console.log(res);\n      let result = res.data;\n\n      if (result.code == 0) {\n        Toast.success(result.msg, 1);\n        obj.successCB(result);\n      }\n    }\n  }).catch(function (err) {\n    console.log(err);\n\n    if (obj.failCB) {\n      obj.failCB(err);\n    }\n  });\n}\nexport function isDefine(str) {\n  if (str == null || str == '' || str == undefined || str == NaN) {\n    return false;\n  }\n\n  ;\n  return true;\n}\nexport function goNext(that, pathname, state) {\n  console.log(that);\n\n  if (state || state == 0) {\n    that.props.history.push({\n      pathname: pathname,\n      state: state\n    });\n  } else {\n    that.props.history.push(pathname);\n  }\n}\nexport function prompt(value, msg) {\n  if (!isDefine(value)) {\n    Toast.info(msg, 1);\n    return false;\n  } else {\n    return true;\n  }\n}\nexport function* verify(arr) {\n  for (var i = 0; i < arr.length; i++) {\n    yield prompt(arr[i].value, arr[i].msg);\n  } //Generator 函数需要return之后才算真正结束\n\n\n  return;\n} //通过递归执行分段函数\n\nexport function doNext(bool, cb) {\n  //先执行第一个分段函数\n  var x = bool.next();\n\n  if (x.value) {\n    //当 value 值为 true 时（也就是非空的时候），再执行下一个分段函数\n    doNext(bool, cb);\n  } else {\n    if (x.done && cb) {\n      //分段函数执行完毕之后执行回调\n      cb();\n    }\n  }\n}\nexport function checkParam(arr, cb) {\n  //Generator 函数需要调用一次才能执行（后面通过 next 执行）。\n  var bool = verify(arr);\n  doNext(bool, cb);\n}","map":{"version":3,"sources":["C:\\Users\\caoxue\\Desktop\\secondary\\secondary\\src\\utils.js"],"names":["axios","Config","Toast","getData","obj","loading","method","url","serverUrl","data","header","deviceId","requestId","clientVersion","timestamp","then","res","successCB","hide","console","log","result","code","success","msg","catch","err","failCB","isDefine","str","undefined","NaN","goNext","that","pathname","state","props","history","push","prompt","value","info","verify","arr","i","length","doNext","bool","cb","x","next","done","checkParam"],"mappings":"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","sourcesContent":["/**\r\n * Created by Lenovo on 2019/8/7.\r\n */\r\nimport axios from \"axios\";\r\nimport Config from './envConfig';\r\nimport {Toast} from 'antd-mobile';\r\nexport function getData(obj){\r\n    debugger;\r\n    Toast.loading('加载中...', 0);\r\n    axios({\r\n        method: obj.method,\r\n        url: Config.serverUrl+obj.url,\r\n        data: obj.data,\r\n        header:{\r\n            deviceId:'11',\r\n            requestId:\"66\",\r\n            clientVersion:\"66\",\r\n            timestamp:'66',\r\n        }\r\n    }).then(function (res) {\r\n        if(obj.successCB){\r\n            Toast.hide();\r\n            console.log(res);\r\n            let result = res.data;\r\n            if(result.code == 0){\r\n                Toast.success(result.msg,1);\r\n                obj.successCB(result);\r\n            }\r\n        }\r\n    }).catch(function (err) {\r\n        console.log(err);\r\n        if(obj.failCB){\r\n            obj.failCB(err);\r\n        }\r\n    });\r\n}\r\nexport function isDefine(str) {\r\n     if(str == null || str == '' || str == undefined || str == NaN){\r\n         return false\r\n     };\r\n     return true;\r\n}\r\n\r\nexport function goNext(that,pathname,state) {\r\n    console.log(that);\r\n    if(state ||state==0){\r\n        that.props.history.push({pathname:pathname,state:state});\r\n    }else {\r\n        that.props.history.push(pathname);\r\n    }\r\n}\r\nexport function prompt(value,msg) {\r\n    if(!isDefine(value)){\r\n        Toast.info(msg, 1);\r\n        return false\r\n    }else {\r\n        return true\r\n    }\r\n}\r\nexport function  *verify(arr){\r\n    for(var i=0;i<arr.length;i++){\r\n        yield prompt(arr[i].value,arr[i].msg);\r\n    }\r\n    //Generator 函数需要return之后才算真正结束\r\n    return;\r\n}\r\n//通过递归执行分段函数\r\nexport function doNext(bool,cb){\r\n    //先执行第一个分段函数\r\n    var x= bool.next();\r\n    if(x.value){\r\n        //当 value 值为 true 时（也就是非空的时候），再执行下一个分段函数\r\n        doNext(bool,cb);\r\n    }else {\r\n        if(x.done && cb){\r\n            //分段函数执行完毕之后执行回调\r\n            cb();\r\n        }\r\n    }\r\n}\r\nexport function checkParam(arr,cb){\r\n    //Generator 函数需要调用一次才能执行（后面通过 next 执行）。\r\n    var bool = verify(arr);\r\n    doNext(bool,cb);\r\n}"]},"metadata":{},"sourceType":"module"}