{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caoxue\\\\Desktop\\\\secondary\\\\src\\\\share\\\\address\\\\index.js\";\n\n/**\r\n * Created by Lenovo on 2019/10/15.\r\n */\nimport React from 'react';\nimport { defaultProps } from './defaultProps';\nimport './index.css';\nimport close from '../images/address/close-gray.png';\nimport checked from '../images/address/checked.png';\nimport { addressInfo } from './addressInfo';\n\nconst generate = (list, arr) => {\n  var data = arr || [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    item.list = [];\n\n    if (item.superId == item.id) {\n      item.list.push(item);\n    }\n\n    data.push(item);\n  }\n\n  return data;\n};\n\nconsole.log(generate(addressInfo));\nexport default class Address extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selectList = [];\n    this.addressList = [{\n      name: \"湖北省\",\n      text: \"选择城市\",\n      type: \"province\",\n      list: [{\n        name: \"武汉市\",\n        text: \"选择区县\",\n        type: \"city\",\n        list: [{\n          name: \"黄陂区\",\n          text: \"选择街道\",\n          type: \"district\",\n          list: [{\n            name: \"暂不选择\",\n            list: []\n          }, {\n            name: \"黄陂街道1\",\n            type: \"street\",\n            list: []\n          }, {\n            name: \"黄陂街道2\",\n            type: \"street\",\n            list: []\n          }]\n        }, {\n          name: \"新洲区\",\n          text: \"选择街道\",\n          type: \"district\",\n          list: [{\n            name: \"暂不选择\",\n            list: []\n          }, {\n            name: \"邾城街道1\",\n            type: \"street\",\n            list: []\n          }, {\n            name: \"邾城街道2\",\n            type: \"street\",\n            list: []\n          }]\n        }]\n      }, {\n        name: \"孝感市\",\n        text: \"选择区县\",\n        type: \"city\",\n        list: [{\n          name: \"应城区\",\n          text: \"选择街道\",\n          type: \"district\",\n          list: [{\n            name: \"暂不选择\",\n            list: []\n          }, {\n            name: \"三合镇\",\n            type: \"street\",\n            list: []\n          }]\n        }]\n      }]\n    }, {\n      name: \"湖南省\",\n      text: \"选择城市\",\n      type: \"province\",\n      list: [{\n        name: \"武汉市\",\n        text: \"选择区县\",\n        type: \"city\",\n        list: [{\n          name: \"黄陂区\",\n          text: \"选择街道\",\n          type: \"district\",\n          list: [{\n            name: \"暂不选择\",\n            list: []\n          }, {\n            name: \"黄陂街道1\",\n            type: \"street\",\n            list: []\n          }, {\n            name: \"黄陂街道2\",\n            type: \"street\",\n            list: []\n          }]\n        }, {\n          name: \"新洲区\",\n          text: \"选择街道\",\n          type: \"district\",\n          list: [{\n            name: \"暂不选择\",\n            list: []\n          }, {\n            name: \"邾城街道1\",\n            type: \"street\",\n            list: []\n          }, {\n            name: \"邾城街道2\",\n            type: \"street\",\n            list: []\n          }]\n        }]\n      }, {\n        name: \"孝感市\",\n        text: \"选择区县\",\n        type: \"city\",\n        list: [{\n          name: \"应城区\",\n          text: \"选择街道\",\n          type: \"district\",\n          list: [{\n            name: \"暂不选择\",\n            list: []\n          }, {\n            name: \"三合镇\",\n            type: \"street\",\n            list: []\n          }]\n        }]\n      }]\n    }];\n    this.state = {\n      defaultText: \"选择省份/城市\",\n      province: \"\",\n      selectOne: \"\",\n      city: \"选择城市\",\n      district: \"选择区县\",\n      street: \"选择街道\",\n      selectList: [],\n      hotCity: [{\n        name: \"武汉市\",\n        id: \"11\",\n        superId: \"1\",\n        type: \"city\"\n      }, {\n        name: \"孝感市\",\n        id: \"12\",\n        superId: \"1\",\n        type: \"city\"\n      }, {\n        name: \"荆门市\",\n        id: \"13\",\n        superId: \"1\",\n        type: \"city\"\n      }, {\n        name: \"十堰市\",\n        id: \"14\",\n        superId: \"1\",\n        type: \"city\"\n      }, {\n        name: \"黄冈市\",\n        id: \"15\",\n        superId: \"1\",\n        type: \"city\"\n      }, {\n        name: \"天门市\",\n        id: \"16\",\n        superId: \"1\",\n        type: \"city\"\n      }, {\n        name: \"常德市\",\n        id: \"17\",\n        superId: \"2\",\n        type: \"city\"\n      }, {\n        name: \"长沙市\",\n        id: \"18\",\n        superId: \"2\",\n        type: \"city\"\n      }, {\n        name: \"郴州市\",\n        id: \"19\",\n        superId: \"2\",\n        type: \"city\"\n      }, {\n        name: \"衡阳市\",\n        id: \"20\",\n        superId: \"2\",\n        type: \"city\"\n      }, {\n        name: \"怀化市\",\n        id: \"21\",\n        superId: \"2\",\n        type: \"city\"\n      }, {\n        name: \"娄底市\",\n        id: \"22\",\n        superId: \"2\",\n        type: \"city\"\n      }],\n      isChoose: false,\n      addressList: [{\n        name: \"湖北省\",\n        text: \"选择城市\",\n        type: \"province\",\n        list: [{\n          name: \"武汉市\",\n          text: \"选择区县\",\n          type: \"city\",\n          list: [{\n            name: \"黄陂区\",\n            text: \"选择街道\",\n            type: \"district\",\n            list: [{\n              name: \"暂不选择\",\n              list: []\n            }, {\n              name: \"黄陂街道1\",\n              type: \"street\",\n              list: []\n            }, {\n              name: \"黄陂街道2\",\n              type: \"street\",\n              list: []\n            }]\n          }, {\n            name: \"新洲区\",\n            text: \"选择街道\",\n            type: \"district\",\n            list: [{\n              name: \"暂不选择\",\n              list: []\n            }, {\n              name: \"邾城街道1\",\n              type: \"street\",\n              list: []\n            }, {\n              name: \"邾城街道2\",\n              type: \"street\",\n              list: []\n            }]\n          }]\n        }, {\n          name: \"孝感市\",\n          text: \"选择区县\",\n          type: \"city\",\n          list: [{\n            name: \"应城区\",\n            text: \"选择街道\",\n            type: \"district\",\n            list: [{\n              name: \"暂不选择\",\n              list: []\n            }, {\n              name: \"三合镇\",\n              type: \"street\",\n              list: []\n            }]\n          }]\n        }]\n      }, {\n        name: \"湖南省\",\n        text: \"选择城市\",\n        type: \"province\",\n        list: [{\n          name: \"武汉市\",\n          text: \"选择区县\",\n          type: \"city\",\n          list: [{\n            name: \"黄陂区\",\n            text: \"选择街道\",\n            type: \"district\",\n            list: [{\n              name: \"暂不选择\",\n              list: []\n            }, {\n              name: \"黄陂街道1\",\n              type: \"street\",\n              list: []\n            }, {\n              name: \"黄陂街道2\",\n              type: \"street\",\n              list: []\n            }]\n          }, {\n            name: \"新洲区\",\n            text: \"选择街道\",\n            type: \"district\",\n            list: [{\n              name: \"暂不选择\",\n              list: []\n            }, {\n              name: \"邾城街道1\",\n              type: \"street\",\n              list: []\n            }, {\n              name: \"邾城街道2\",\n              type: \"street\",\n              list: []\n            }]\n          }]\n        }, {\n          name: \"孝感市\",\n          text: \"选择区县\",\n          type: \"city\",\n          list: [{\n            name: \"应城区\",\n            text: \"选择街道\",\n            type: \"district\",\n            list: [{\n              name: \"暂不选择\",\n              list: []\n            }, {\n              name: \"三合镇\",\n              type: \"street\",\n              list: []\n            }]\n          }]\n        }]\n      }]\n    };\n  } //选择热门城市\n\n\n  chooseCity(text) {\n    var province = {};\n    var item = {};\n\n    for (var i = 0; i < this.addressList.length; i++) {\n      var itemOne = this.addressList[i]; //同等类型（都是省份或者都是城市）添加后替换掉原先的地区，清除掉后面的选项。\n\n      for (var j = 0; j < itemOne.list.length; j++) {\n        var itemOne1 = itemOne.list[j];\n\n        if (itemOne1.type == text.type && itemOne1.name.indexOf(text.name) > -1) {\n          province = itemOne;\n          item = itemOne1;\n          break;\n        }\n      }\n    }\n\n    this.selectList.push(province);\n    this.selectList.push(item);\n    this.selectList.push({\n      name: item.text,\n      list: item.list\n    });\n    this.setState({\n      selectOne: {\n        name: item.text,\n        list: item.list\n      },\n      isChoose: true,\n      addressList: item.list,\n      defaultText: item.text,\n      selectList: this.selectList\n    });\n  } //改变地址\n\n\n  changeAddress(item) {\n    this.setState({\n      selectOne: item\n    }); //找到对应的数据集\n\n    this.findOne(this.addressList, item);\n  }\n\n  findOne(list, item) {\n    //debugger;\n    console.log(this.state.addressList);\n\n    if (list && list.length) {\n      for (var i = 0; i < list.length; i++) {\n        var item1 = list[i];\n\n        if (item.name.indexOf(\"选择\") > -1) {\n          this.setState({\n            addressList: item.list\n          });\n          break;\n        } else if (item.name == item1.name) {\n          this.setState({\n            addressList: list\n          });\n          break;\n        } else {\n          this.findOne(item1.list, item);\n        }\n      }\n    }\n  } //选择地区\n\n\n  chooseAddress(item) {\n    let getAddress = this.props.getAddress;\n\n    for (var i = 0; i < this.selectList.length; i++) {\n      var itemOne = this.selectList[i]; //将选择列表表带有选择的去掉。\n\n      if (itemOne.name.indexOf(\"选择\") > -1) {\n        this.selectList.splice(i, 1);\n        break;\n      } //同等类型（都是省份或者都是城市）添加后替换掉原先的地区，清除掉后面的选项。\n\n\n      if (itemOne.type == item.type) {\n        this.selectList[i] = item;\n        this.selectList = this.selectList.slice(0, i + 1);\n        this.selectList.push({\n          name: item.text,\n          list: item.list\n        });\n        break;\n      }\n    } //去重，只添加没有添加的地址\n\n\n    if (!this.selectList.includes(item)) {\n      this.selectList.push(item);\n      this.selectList.push({\n        name: item.text,\n        list: item.list\n      });\n    }\n\n    this.setState({\n      selectOne: {\n        name: item.text,\n        list: item.list\n      },\n      isChoose: true,\n      addressList: item.list,\n      defaultText: item.text,\n      selectList: this.selectList\n    }, () => {\n      if (item.list.length == 0) {\n        //过滤掉带有选择的值\n        getAddress(this.state.selectList.filter(item => item.name && item.name.indexOf(\"选择\") < 0));\n      }\n    });\n  }\n\n  render() {\n    let _this$props = this.props,\n        closeModel = _this$props.closeModel,\n        prefixCls = _this$props.prefixCls;\n    return React.createElement(\"div\", {\n      className: prefixCls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: prefixCls + \"-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: prefixCls + \"-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: prefixCls + \"-title-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: prefixCls + \"-title-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"\\u8BF7\\u9009\\u62E9\"), React.createElement(\"img\", {\n      src: close,\n      alt: \"\",\n      className: prefixCls + \"-title-right\",\n      onClick: () => closeModel(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    })), this.state.isChoose ? React.createElement(\"div\", {\n      className: prefixCls + \"-already\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, this.state.selectList.map((item, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: item.name == this.state.selectOne.name ? prefixCls + \"-already-item-active\" : prefixCls + \"-already-item\",\n        onClick: () => this.changeAddress(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, item.name);\n    })) : React.createElement(\"div\", {\n      className: prefixCls + \"-city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: prefixCls + \"-city-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"\\u70ED\\u95E8\\u57CE\\u5E02\"), React.createElement(\"div\", {\n      className: prefixCls + \"-city-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, this.state.hotCity.map((item, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: prefixCls + \"-city-item\",\n        onClick: () => this.chooseCity(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, item.name);\n    }))), React.createElement(\"div\", {\n      className: prefixCls + \"-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: prefixCls + \"-select-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, this.state.defaultText), React.createElement(\"div\", {\n      className: prefixCls + \"-select-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, this.state.addressList.map((item, index) => {\n      return React.createElement(\"div\", {\n        className: prefixCls + \"-select-wrapper\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: () => this.chooseAddress(item, index),\n        className: item.name == this.state.selectOne.name ? prefixCls + \"-select-item-active\" : prefixCls + \"-select-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, item.name), item.name == this.state.selectOne.name ? React.createElement(\"img\", {\n        src: checked,\n        alt: \"\",\n        className: prefixCls + \"-select-item-checked\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }) : null);\n    })))));\n  }\n\n}\nAddress.defaultProps = defaultProps;","map":{"version":3,"sources":["C:\\Users\\caoxue\\Desktop\\secondary\\src\\share\\address\\index.js"],"names":["React","defaultProps","close","checked","addressInfo","generate","list","arr","data","i","length","item","superId","id","push","console","log","Address","Component","constructor","props","selectList","addressList","name","text","type","state","defaultText","province","selectOne","city","district","street","hotCity","isChoose","chooseCity","itemOne","j","itemOne1","indexOf","setState","changeAddress","findOne","item1","chooseAddress","getAddress","splice","slice","includes","filter","render","closeModel","prefixCls","map","index"],"mappings":";;AAAA;;;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,SAAQC,WAAR,QAA0B,eAA1B;;AACA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAMC,GAAN,KAAY;AACzB,MAAIC,IAAI,GAAGD,GAAG,IAAE,EAAhB;;AACA,OAAI,IAAIE,CAAC,GAAE,CAAX,EAAaA,CAAC,GAACH,IAAI,CAACI,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC3B,QAAIE,IAAI,GAAGL,IAAI,CAACG,CAAD,CAAf;AACAE,IAAAA,IAAI,CAACL,IAAL,GAAY,EAAZ;;AACA,QAAGK,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,EAAxB,EAA2B;AACvBF,MAAAA,IAAI,CAACL,IAAL,CAAUQ,IAAV,CAAeH,IAAf;AACH;;AACDH,IAAAA,IAAI,CAACM,IAAL,CAAUH,IAAV;AACH;;AACD,SAAOH,IAAP;AACH,CAXD;;AAYAO,OAAO,CAACC,GAAR,CAAYX,QAAQ,CAACD,WAAD,CAApB;AACA,eAAe,MAAMa,OAAN,SAAsBjB,KAAK,CAACkB,SAA5B,CAAsC;AAEjDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,WAAL,GAAkB,CACd;AAACC,MAAAA,IAAI,EAAC,KAAN;AAAYC,MAAAA,IAAI,EAAC,MAAjB;AAAwBC,MAAAA,IAAI,EAAC,UAA7B;AACInB,MAAAA,IAAI,EAAC,CACD;AAACiB,QAAAA,IAAI,EAAC,KAAN;AAAYC,QAAAA,IAAI,EAAC,MAAjB;AAAwBC,QAAAA,IAAI,EAAC,MAA7B;AACInB,QAAAA,IAAI,EAAC,CACD;AAACiB,UAAAA,IAAI,EAAC,KAAN;AAAYC,UAAAA,IAAI,EAAC,MAAjB;AAAwBC,UAAAA,IAAI,EAAC,UAA7B;AACInB,UAAAA,IAAI,EAAC,CACD;AAACiB,YAAAA,IAAI,EAAC,MAAN;AAAajB,YAAAA,IAAI,EAAC;AAAlB,WADC,EAED;AAACiB,YAAAA,IAAI,EAAC,OAAN;AAAcE,YAAAA,IAAI,EAAC,QAAnB;AAA4BnB,YAAAA,IAAI,EAAC;AAAjC,WAFC,EAGD;AAACiB,YAAAA,IAAI,EAAC,OAAN;AAAcE,YAAAA,IAAI,EAAC,QAAnB;AAA4BnB,YAAAA,IAAI,EAAC;AAAjC,WAHC;AADT,SADC,EAMD;AAACiB,UAAAA,IAAI,EAAC,KAAN;AAAYC,UAAAA,IAAI,EAAC,MAAjB;AAAwBC,UAAAA,IAAI,EAAC,UAA7B;AACInB,UAAAA,IAAI,EAAC,CACD;AAACiB,YAAAA,IAAI,EAAC,MAAN;AAAajB,YAAAA,IAAI,EAAC;AAAlB,WADC,EAED;AAACiB,YAAAA,IAAI,EAAC,OAAN;AAAcE,YAAAA,IAAI,EAAC,QAAnB;AAA4BnB,YAAAA,IAAI,EAAC;AAAjC,WAFC,EAGD;AAACiB,YAAAA,IAAI,EAAC,OAAN;AAAcE,YAAAA,IAAI,EAAC,QAAnB;AAA4BnB,YAAAA,IAAI,EAAC;AAAjC,WAHC;AADT,SANC;AADT,OADC,EAcD;AAACiB,QAAAA,IAAI,EAAC,KAAN;AAAYC,QAAAA,IAAI,EAAC,MAAjB;AAAwBC,QAAAA,IAAI,EAAC,MAA7B;AACInB,QAAAA,IAAI,EAAC,CACD;AAACiB,UAAAA,IAAI,EAAC,KAAN;AAAYC,UAAAA,IAAI,EAAC,MAAjB;AAAwBC,UAAAA,IAAI,EAAC,UAA7B;AACInB,UAAAA,IAAI,EAAC,CAAE;AAACiB,YAAAA,IAAI,EAAC,MAAN;AAAajB,YAAAA,IAAI,EAAC;AAAlB,WAAF,EAAwB;AAACiB,YAAAA,IAAI,EAAC,KAAN;AAAYE,YAAAA,IAAI,EAAC,QAAjB;AAA0BnB,YAAAA,IAAI,EAAC;AAA/B,WAAxB;AADT,SADC;AADT,OAdC;AADT,KADc,EAoBd;AAACiB,MAAAA,IAAI,EAAC,KAAN;AAAYC,MAAAA,IAAI,EAAC,MAAjB;AAAwBC,MAAAA,IAAI,EAAC,UAA7B;AACInB,MAAAA,IAAI,EAAC,CACD;AAACiB,QAAAA,IAAI,EAAC,KAAN;AAAYC,QAAAA,IAAI,EAAC,MAAjB;AAAwBC,QAAAA,IAAI,EAAC,MAA7B;AACInB,QAAAA,IAAI,EAAC,CACD;AAACiB,UAAAA,IAAI,EAAC,KAAN;AAAYC,UAAAA,IAAI,EAAC,MAAjB;AAAwBC,UAAAA,IAAI,EAAC,UAA7B;AACInB,UAAAA,IAAI,EAAC,CACD;AAACiB,YAAAA,IAAI,EAAC,MAAN;AAAajB,YAAAA,IAAI,EAAC;AAAlB,WADC,EAED;AAACiB,YAAAA,IAAI,EAAC,OAAN;AAAcE,YAAAA,IAAI,EAAC,QAAnB;AAA4BnB,YAAAA,IAAI,EAAC;AAAjC,WAFC,EAGD;AAACiB,YAAAA,IAAI,EAAC,OAAN;AAAcE,YAAAA,IAAI,EAAC,QAAnB;AAA4BnB,YAAAA,IAAI,EAAC;AAAjC,WAHC;AADT,SADC,EAMD;AAACiB,UAAAA,IAAI,EAAC,KAAN;AAAYC,UAAAA,IAAI,EAAC,MAAjB;AAAwBC,UAAAA,IAAI,EAAC,UAA7B;AACInB,UAAAA,IAAI,EAAC,CACD;AAACiB,YAAAA,IAAI,EAAC,MAAN;AAAajB,YAAAA,IAAI,EAAC;AAAlB,WADC,EAED;AAACiB,YAAAA,IAAI,EAAC,OAAN;AAAcE,YAAAA,IAAI,EAAC,QAAnB;AAA4BnB,YAAAA,IAAI,EAAC;AAAjC,WAFC,EAGD;AAACiB,YAAAA,IAAI,EAAC,OAAN;AAAcE,YAAAA,IAAI,EAAC,QAAnB;AAA4BnB,YAAAA,IAAI,EAAC;AAAjC,WAHC;AADT,SANC;AADT,OADC,EAcD;AAACiB,QAAAA,IAAI,EAAC,KAAN;AAAYC,QAAAA,IAAI,EAAC,MAAjB;AAAwBC,QAAAA,IAAI,EAAC,MAA7B;AACInB,QAAAA,IAAI,EAAC,CACD;AAACiB,UAAAA,IAAI,EAAC,KAAN;AAAYC,UAAAA,IAAI,EAAC,MAAjB;AAAwBC,UAAAA,IAAI,EAAC,UAA7B;AACInB,UAAAA,IAAI,EAAC,CAAE;AAACiB,YAAAA,IAAI,EAAC,MAAN;AAAajB,YAAAA,IAAI,EAAC;AAAlB,WAAF,EAAwB;AAACiB,YAAAA,IAAI,EAAC,KAAN;AAAYE,YAAAA,IAAI,EAAC,QAAjB;AAA0BnB,YAAAA,IAAI,EAAC;AAA/B,WAAxB;AADT,SADC;AADT,OAdC;AADT,KApBc,CAAlB;AAwCA,SAAKoB,KAAL,GAAW;AACPC,MAAAA,WAAW,EAAC,SADL;AAEPC,MAAAA,QAAQ,EAAC,EAFF;AAGPC,MAAAA,SAAS,EAAC,EAHH;AAIPC,MAAAA,IAAI,EAAC,MAJE;AAKPC,MAAAA,QAAQ,EAAC,MALF;AAMPC,MAAAA,MAAM,EAAC,MANA;AAOPX,MAAAA,UAAU,EAAC,EAPJ;AAQPY,MAAAA,OAAO,EAAC,CACJ;AAACV,QAAAA,IAAI,EAAC,KAAN;AAAYV,QAAAA,EAAE,EAAC,IAAf;AAAoBD,QAAAA,OAAO,EAAC,GAA5B;AAAgCa,QAAAA,IAAI,EAAC;AAArC,OADI,EAEJ;AAACF,QAAAA,IAAI,EAAC,KAAN;AAAYV,QAAAA,EAAE,EAAC,IAAf;AAAoBD,QAAAA,OAAO,EAAC,GAA5B;AAAgCa,QAAAA,IAAI,EAAC;AAArC,OAFI,EAGJ;AAACF,QAAAA,IAAI,EAAC,KAAN;AAAYV,QAAAA,EAAE,EAAC,IAAf;AAAoBD,QAAAA,OAAO,EAAC,GAA5B;AAAgCa,QAAAA,IAAI,EAAC;AAArC,OAHI,EAIJ;AAACF,QAAAA,IAAI,EAAC,KAAN;AAAYV,QAAAA,EAAE,EAAC,IAAf;AAAoBD,QAAAA,OAAO,EAAC,GAA5B;AAAgCa,QAAAA,IAAI,EAAC;AAArC,OAJI,EAKJ;AAACF,QAAAA,IAAI,EAAC,KAAN;AAAYV,QAAAA,EAAE,EAAC,IAAf;AAAoBD,QAAAA,OAAO,EAAC,GAA5B;AAAgCa,QAAAA,IAAI,EAAC;AAArC,OALI,EAMJ;AAACF,QAAAA,IAAI,EAAC,KAAN;AAAYV,QAAAA,EAAE,EAAC,IAAf;AAAoBD,QAAAA,OAAO,EAAC,GAA5B;AAAgCa,QAAAA,IAAI,EAAC;AAArC,OANI,EAQJ;AAACF,QAAAA,IAAI,EAAC,KAAN;AAAYV,QAAAA,EAAE,EAAC,IAAf;AAAoBD,QAAAA,OAAO,EAAC,GAA5B;AAAgCa,QAAAA,IAAI,EAAC;AAArC,OARI,EASJ;AAACF,QAAAA,IAAI,EAAC,KAAN;AAAYV,QAAAA,EAAE,EAAC,IAAf;AAAoBD,QAAAA,OAAO,EAAC,GAA5B;AAAgCa,QAAAA,IAAI,EAAC;AAArC,OATI,EAUJ;AAACF,QAAAA,IAAI,EAAC,KAAN;AAAYV,QAAAA,EAAE,EAAC,IAAf;AAAoBD,QAAAA,OAAO,EAAC,GAA5B;AAAgCa,QAAAA,IAAI,EAAC;AAArC,OAVI,EAWJ;AAACF,QAAAA,IAAI,EAAC,KAAN;AAAYV,QAAAA,EAAE,EAAC,IAAf;AAAoBD,QAAAA,OAAO,EAAC,GAA5B;AAAgCa,QAAAA,IAAI,EAAC;AAArC,OAXI,EAYJ;AAACF,QAAAA,IAAI,EAAC,KAAN;AAAYV,QAAAA,EAAE,EAAC,IAAf;AAAoBD,QAAAA,OAAO,EAAC,GAA5B;AAAgCa,QAAAA,IAAI,EAAC;AAArC,OAZI,EAaJ;AAACF,QAAAA,IAAI,EAAC,KAAN;AAAYV,QAAAA,EAAE,EAAC,IAAf;AAAoBD,QAAAA,OAAO,EAAC,GAA5B;AAAgCa,QAAAA,IAAI,EAAC;AAArC,OAbI,CARD;AAuBPS,MAAAA,QAAQ,EAAC,KAvBF;AAwBPZ,MAAAA,WAAW,EAAC,CACJ;AAACC,QAAAA,IAAI,EAAC,KAAN;AAAYC,QAAAA,IAAI,EAAC,MAAjB;AAAwBC,QAAAA,IAAI,EAAC,UAA7B;AACInB,QAAAA,IAAI,EAAC,CACD;AAACiB,UAAAA,IAAI,EAAC,KAAN;AAAYC,UAAAA,IAAI,EAAC,MAAjB;AAAwBC,UAAAA,IAAI,EAAC,MAA7B;AACAnB,UAAAA,IAAI,EAAC,CACD;AAACiB,YAAAA,IAAI,EAAC,KAAN;AAAYC,YAAAA,IAAI,EAAC,MAAjB;AAAwBC,YAAAA,IAAI,EAAC,UAA7B;AACAnB,YAAAA,IAAI,EAAC,CACD;AAACiB,cAAAA,IAAI,EAAC,MAAN;AAAajB,cAAAA,IAAI,EAAC;AAAlB,aADC,EAED;AAACiB,cAAAA,IAAI,EAAC,OAAN;AAAcE,cAAAA,IAAI,EAAC,QAAnB;AAA4BnB,cAAAA,IAAI,EAAC;AAAjC,aAFC,EAGD;AAACiB,cAAAA,IAAI,EAAC,OAAN;AAAcE,cAAAA,IAAI,EAAC,QAAnB;AAA4BnB,cAAAA,IAAI,EAAC;AAAjC,aAHC;AADL,WADC,EAMD;AAACiB,YAAAA,IAAI,EAAC,KAAN;AAAYC,YAAAA,IAAI,EAAC,MAAjB;AAAwBC,YAAAA,IAAI,EAAC,UAA7B;AACCnB,YAAAA,IAAI,EAAC,CACE;AAACiB,cAAAA,IAAI,EAAC,MAAN;AAAajB,cAAAA,IAAI,EAAC;AAAlB,aADF,EAEE;AAACiB,cAAAA,IAAI,EAAC,OAAN;AAAcE,cAAAA,IAAI,EAAC,QAAnB;AAA4BnB,cAAAA,IAAI,EAAC;AAAjC,aAFF,EAGE;AAACiB,cAAAA,IAAI,EAAC,OAAN;AAAcE,cAAAA,IAAI,EAAC,QAAnB;AAA4BnB,cAAAA,IAAI,EAAC;AAAjC,aAHF;AADN,WANC;AADL,SADC,EAcD;AAACiB,UAAAA,IAAI,EAAC,KAAN;AAAYC,UAAAA,IAAI,EAAC,MAAjB;AAAwBC,UAAAA,IAAI,EAAC,MAA7B;AACCnB,UAAAA,IAAI,EAAC,CACF;AAACiB,YAAAA,IAAI,EAAC,KAAN;AAAYC,YAAAA,IAAI,EAAC,MAAjB;AAAwBC,YAAAA,IAAI,EAAC,UAA7B;AACInB,YAAAA,IAAI,EAAC,CAAE;AAACiB,cAAAA,IAAI,EAAC,MAAN;AAAajB,cAAAA,IAAI,EAAC;AAAlB,aAAF,EAAwB;AAACiB,cAAAA,IAAI,EAAC,KAAN;AAAYE,cAAAA,IAAI,EAAC,QAAjB;AAA0BnB,cAAAA,IAAI,EAAC;AAA/B,aAAxB;AADT,WADE;AADN,SAdC;AADT,OADI,EAoBR;AAACiB,QAAAA,IAAI,EAAC,KAAN;AAAYC,QAAAA,IAAI,EAAC,MAAjB;AAAwBC,QAAAA,IAAI,EAAC,UAA7B;AACInB,QAAAA,IAAI,EAAC,CACD;AAACiB,UAAAA,IAAI,EAAC,KAAN;AAAYC,UAAAA,IAAI,EAAC,MAAjB;AAAwBC,UAAAA,IAAI,EAAC,MAA7B;AACInB,UAAAA,IAAI,EAAC,CACD;AAACiB,YAAAA,IAAI,EAAC,KAAN;AAAYC,YAAAA,IAAI,EAAC,MAAjB;AAAwBC,YAAAA,IAAI,EAAC,UAA7B;AACInB,YAAAA,IAAI,EAAC,CACD;AAACiB,cAAAA,IAAI,EAAC,MAAN;AAAajB,cAAAA,IAAI,EAAC;AAAlB,aADC,EAED;AAACiB,cAAAA,IAAI,EAAC,OAAN;AAAcE,cAAAA,IAAI,EAAC,QAAnB;AAA4BnB,cAAAA,IAAI,EAAC;AAAjC,aAFC,EAGD;AAACiB,cAAAA,IAAI,EAAC,OAAN;AAAcE,cAAAA,IAAI,EAAC,QAAnB;AAA4BnB,cAAAA,IAAI,EAAC;AAAjC,aAHC;AADT,WADC,EAMD;AAACiB,YAAAA,IAAI,EAAC,KAAN;AAAYC,YAAAA,IAAI,EAAC,MAAjB;AAAwBC,YAAAA,IAAI,EAAC,UAA7B;AACInB,YAAAA,IAAI,EAAC,CACD;AAACiB,cAAAA,IAAI,EAAC,MAAN;AAAajB,cAAAA,IAAI,EAAC;AAAlB,aADC,EAED;AAACiB,cAAAA,IAAI,EAAC,OAAN;AAAcE,cAAAA,IAAI,EAAC,QAAnB;AAA4BnB,cAAAA,IAAI,EAAC;AAAjC,aAFC,EAGD;AAACiB,cAAAA,IAAI,EAAC,OAAN;AAAcE,cAAAA,IAAI,EAAC,QAAnB;AAA4BnB,cAAAA,IAAI,EAAC;AAAjC,aAHC;AADT,WANC;AADT,SADC,EAcD;AAACiB,UAAAA,IAAI,EAAC,KAAN;AAAYC,UAAAA,IAAI,EAAC,MAAjB;AAAwBC,UAAAA,IAAI,EAAC,MAA7B;AACInB,UAAAA,IAAI,EAAC,CACD;AAACiB,YAAAA,IAAI,EAAC,KAAN;AAAYC,YAAAA,IAAI,EAAC,MAAjB;AAAwBC,YAAAA,IAAI,EAAC,UAA7B;AACInB,YAAAA,IAAI,EAAC,CAAE;AAACiB,cAAAA,IAAI,EAAC,MAAN;AAAajB,cAAAA,IAAI,EAAC;AAAlB,aAAF,EAAwB;AAACiB,cAAAA,IAAI,EAAC,KAAN;AAAYE,cAAAA,IAAI,EAAC,QAAjB;AAA0BnB,cAAAA,IAAI,EAAC;AAA/B,aAAxB;AADT,WADC;AADT,SAdC;AADT,OApBQ;AAxBL,KAAX;AAiEH,GA9GgD,CA+GjD;;;AACA6B,EAAAA,UAAU,CAACX,IAAD,EAAM;AACZ,QAAII,QAAQ,GAAG,EAAf;AACA,QAAIjB,IAAI,GAAG,EAAX;;AACA,SAAI,IAAIF,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKa,WAAL,CAAiBZ,MAA/B,EAAsCD,CAAC,EAAvC,EAA0C;AACtC,UAAI2B,OAAO,GAAG,KAAKd,WAAL,CAAiBb,CAAjB,CAAd,CADsC,CAEtC;;AACA,WAAI,IAAI4B,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,OAAO,CAAC9B,IAAR,CAAaI,MAA3B,EAAkC2B,CAAC,EAAnC,EAAsC;AAClC,YAAIC,QAAQ,GAAGF,OAAO,CAAC9B,IAAR,CAAa+B,CAAb,CAAf;;AACA,YAAGC,QAAQ,CAACb,IAAT,IAAiBD,IAAI,CAACC,IAAtB,IAA8Ba,QAAQ,CAACf,IAAT,CAAcgB,OAAd,CAAsBf,IAAI,CAACD,IAA3B,IAAiC,CAAC,CAAnE,EAAqE;AACjEK,UAAAA,QAAQ,GAAGQ,OAAX;AACAzB,UAAAA,IAAI,GAAG2B,QAAP;AACA;AACH;AACJ;AACJ;;AACD,SAAKjB,UAAL,CAAgBP,IAAhB,CAAqBc,QAArB;AACA,SAAKP,UAAL,CAAgBP,IAAhB,CAAqBH,IAArB;AACA,SAAKU,UAAL,CAAgBP,IAAhB,CAAqB;AAACS,MAAAA,IAAI,EAACZ,IAAI,CAACa,IAAX;AAAgBlB,MAAAA,IAAI,EAACK,IAAI,CAACL;AAA1B,KAArB;AACA,SAAKkC,QAAL,CAAc;AACVX,MAAAA,SAAS,EAAC;AAACN,QAAAA,IAAI,EAACZ,IAAI,CAACa,IAAX;AAAgBlB,QAAAA,IAAI,EAACK,IAAI,CAACL;AAA1B,OADA;AAEV4B,MAAAA,QAAQ,EAAC,IAFC;AAGVZ,MAAAA,WAAW,EAACX,IAAI,CAACL,IAHP;AAIVqB,MAAAA,WAAW,EAAChB,IAAI,CAACa,IAJP;AAKVH,MAAAA,UAAU,EAAC,KAAKA;AALN,KAAd;AAOH,GAzIgD,CA0IjD;;;AACAoB,EAAAA,aAAa,CAAC9B,IAAD,EAAM;AACf,SAAK6B,QAAL,CAAc;AACVX,MAAAA,SAAS,EAAClB;AADA,KAAd,EADe,CAIf;;AACA,SAAK+B,OAAL,CAAa,KAAKpB,WAAlB,EAA8BX,IAA9B;AACH;;AACD+B,EAAAA,OAAO,CAACpC,IAAD,EAAMK,IAAN,EAAW;AACd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKU,KAAL,CAAWJ,WAAvB;;AACA,QAAGhB,IAAI,IAAIA,IAAI,CAACI,MAAhB,EAAuB;AACnB,WAAI,IAAID,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,IAAI,CAACI,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC1B,YAAIkC,KAAK,GAAGrC,IAAI,CAACG,CAAD,CAAhB;;AACA,YAAGE,IAAI,CAACY,IAAL,CAAUgB,OAAV,CAAkB,IAAlB,IAAwB,CAAC,CAA5B,EAA8B;AAC1B,eAAKC,QAAL,CAAc;AACVlB,YAAAA,WAAW,EAACX,IAAI,CAACL;AADP,WAAd;AAGA;AACH,SALD,MAKM,IAAGK,IAAI,CAACY,IAAL,IAAaoB,KAAK,CAACpB,IAAtB,EAA2B;AAC7B,eAAKiB,QAAL,CAAc;AACVlB,YAAAA,WAAW,EAAChB;AADF,WAAd;AAGA;AACH,SALK,MAKA;AACF,eAAKoC,OAAL,CAAaC,KAAK,CAACrC,IAAnB,EAAwBK,IAAxB;AACH;AACJ;AACJ;AACJ,GAvKgD,CAwKjD;;;AACAiC,EAAAA,aAAa,CAACjC,IAAD,EAAM;AAAA,QACVkC,UADU,GACI,KAAKzB,KADT,CACVyB,UADU;;AAEf,SAAI,IAAIpC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKY,UAAL,CAAgBX,MAA9B,EAAqCD,CAAC,EAAtC,EAAyC;AACjC,UAAI2B,OAAO,GAAG,KAAKf,UAAL,CAAgBZ,CAAhB,CAAd,CADiC,CAEjC;;AACA,UAAG2B,OAAO,CAACb,IAAR,CAAagB,OAAb,CAAqB,IAArB,IAA2B,CAAC,CAA/B,EAAiC;AAC7B,aAAKlB,UAAL,CAAgByB,MAAhB,CAAuBrC,CAAvB,EAAyB,CAAzB;AACA;AACH,OANgC,CAOjC;;;AACA,UAAG2B,OAAO,CAACX,IAAR,IAAgBd,IAAI,CAACc,IAAxB,EAA6B;AACzB,aAAKJ,UAAL,CAAgBZ,CAAhB,IAAqBE,IAArB;AACA,aAAKU,UAAL,GAAkB,KAAKA,UAAL,CAAgB0B,KAAhB,CAAsB,CAAtB,EAAwBtC,CAAC,GAAC,CAA1B,CAAlB;AACA,aAAKY,UAAL,CAAgBP,IAAhB,CAAqB;AAACS,UAAAA,IAAI,EAACZ,IAAI,CAACa,IAAX;AAAgBlB,UAAAA,IAAI,EAACK,IAAI,CAACL;AAA1B,SAArB;AACA;AACH;AACR,KAhBc,CAiBf;;;AACA,QAAG,CAAC,KAAKe,UAAL,CAAgB2B,QAAhB,CAAyBrC,IAAzB,CAAJ,EAAmC;AAC/B,WAAKU,UAAL,CAAgBP,IAAhB,CAAqBH,IAArB;AACA,WAAKU,UAAL,CAAgBP,IAAhB,CAAqB;AAACS,QAAAA,IAAI,EAACZ,IAAI,CAACa,IAAX;AAAgBlB,QAAAA,IAAI,EAACK,IAAI,CAACL;AAA1B,OAArB;AACH;;AACD,SAAKkC,QAAL,CAAc;AACVX,MAAAA,SAAS,EAAC;AAACN,QAAAA,IAAI,EAACZ,IAAI,CAACa,IAAX;AAAgBlB,QAAAA,IAAI,EAACK,IAAI,CAACL;AAA1B,OADA;AAEV4B,MAAAA,QAAQ,EAAC,IAFC;AAGVZ,MAAAA,WAAW,EAACX,IAAI,CAACL,IAHP;AAIVqB,MAAAA,WAAW,EAAChB,IAAI,CAACa,IAJP;AAKVH,MAAAA,UAAU,EAAC,KAAKA;AALN,KAAd,EAME,MAAI;AACF,UAAGV,IAAI,CAACL,IAAL,CAAUI,MAAV,IAAoB,CAAvB,EAAyB;AACrB;AACAmC,QAAAA,UAAU,CAAC,KAAKnB,KAAL,CAAWL,UAAX,CAAsB4B,MAAtB,CAA8BtC,IAAD,IAAQA,IAAI,CAACY,IAAL,IAAaZ,IAAI,CAACY,IAAL,CAAUgB,OAAV,CAAkB,IAAlB,IAAwB,CAA1E,CAAD,CAAV;AACH;AACJ,KAXD;AAYH;;AACDW,EAAAA,MAAM,GAAE;AAAA,sBACyB,KAAK9B,KAD9B;AAAA,QACC+B,UADD,eACCA,UADD;AAAA,QACYC,SADZ,eACYA,SADZ;AAEJ,WACI;AAAK,MAAA,SAAS,EAAEA,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEA,SAAS,GAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAEA,SAAS,GAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEA,SAAS,GAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAEA,SAAS,GAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,EAGI;AAAK,MAAA,GAAG,EAAElD,KAAV;AAAiB,MAAA,GAAG,EAAC,EAArB;AAAwB,MAAA,SAAS,EAAEkD,SAAS,GAAC,cAA7C;AAA6D,MAAA,OAAO,EAAE,MAAID,UAAU,EAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADA,EAMK,KAAKzB,KAAL,CAAWQ,QAAX,GACG;AAAK,MAAA,SAAS,EAAEkB,SAAS,GAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK1B,KAAL,CAAWL,UAAX,CAAsBgC,GAAtB,CAA0B,CAAC1C,IAAD,EAAM2C,KAAN,KAAc;AACzC,aAAO;AAAK,QAAA,GAAG,EAAEA,KAAV;AACI,QAAA,SAAS,EAAE3C,IAAI,CAACY,IAAL,IAAa,KAAKG,KAAL,CAAWG,SAAX,CAAqBN,IAAlC,GAAuC6B,SAAS,GAAC,sBAAjD,GAAwEA,SAAS,GAAC,eADjG;AAEI,QAAA,OAAO,EAAE,MAAI,KAAKX,aAAL,CAAmB9B,IAAnB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGLA,IAAI,CAACY,IAHA,CAAP;AAIH,KALI,CADL,CADH,GASG;AAAK,MAAA,SAAS,EAAE6B,SAAS,GAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEA,SAAS,GAAC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI;AAAK,MAAA,SAAS,EAAEA,SAAS,GAAC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAK1B,KAAL,CAAWO,OAAX,CAAmBoB,GAAnB,CAAuB,CAAC1C,IAAD,EAAM2C,KAAN,KAAc;AACjC,aAAO;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAiB,QAAA,SAAS,EAAEF,SAAS,GAAC,YAAtC;AAAoD,QAAA,OAAO,EAAE,MAAI,KAAKjB,UAAL,CAAgBxB,IAAhB,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyFA,IAAI,CAACY,IAA9F,CAAP;AACH,KAFD,CAFR,CAFJ,CAfR,EA0BI;AAAK,MAAA,SAAS,EAAE6B,SAAS,GAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAK,MAAA,SAAS,EAAEA,SAAS,GAAC,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2C,KAAK1B,KAAL,CAAWC,WAAtD,CADR,EAEQ;AAAK,MAAA,SAAS,EAAEyB,SAAS,GAAC,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAK1B,KAAL,CAAWJ,WAAX,CAAuB+B,GAAvB,CAA2B,CAAC1C,IAAD,EAAM2C,KAAN,KAAc;AACrC,aAAO;AAAK,QAAA,SAAS,EAAEF,SAAS,GAAC,iBAA1B;AAA6C,QAAA,GAAG,EAAEE,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACP;AAAK,QAAA,OAAO,EAAE,MAAI,KAAKV,aAAL,CAAmBjC,IAAnB,EAAwB2C,KAAxB,CAAlB;AACK,QAAA,SAAS,EAAE3C,IAAI,CAACY,IAAL,IAAa,KAAKG,KAAL,CAAWG,SAAX,CAAqBN,IAAlC,GAAuC6B,SAAS,GAAC,qBAAjD,GAAuEA,SAAS,GAAC,cADjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACkHzC,IAAI,CAACY,IADvH,CADO,EAGFZ,IAAI,CAACY,IAAL,IAAa,KAAKG,KAAL,CAAWG,SAAX,CAAqBN,IAAlC,GAAwC;AAAK,QAAA,GAAG,EAAEpB,OAAV;AAAmB,QAAA,GAAG,EAAC,EAAvB;AAA0B,QAAA,SAAS,EAAEiD,SAAS,GAAC,sBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxC,GAAiH,IAH/G,CAAP;AAKH,KAND,CAFR,CAFR,CA1BJ,CADJ,CADJ;AA6CH;;AA3PgD;AAAhCnC,O,CACVhB,Y,GAAeA,Y","sourcesContent":["/**\r\n * Created by Lenovo on 2019/10/15.\r\n */\r\nimport React from 'react';\r\nimport {defaultProps} from './defaultProps';\r\nimport './index.css';\r\nimport close from '../images/address/close-gray.png';\r\nimport checked from '../images/address/checked.png';\r\nimport {addressInfo} from './addressInfo';\r\nconst generate = (list,arr)=>{\r\n    var data = arr||[];\r\n    for(var i =0;i<list.length;i++){\r\n        var item = list[i];\r\n        item.list = [];\r\n        if(item.superId == item.id){\r\n            item.list.push(item);\r\n        }\r\n        data.push(item);\r\n    }\r\n    return data;\r\n};\r\nconsole.log(generate(addressInfo));\r\nexport default class Address extends React.Component {\r\n    static defaultProps = defaultProps;\r\n    constructor(props){\r\n        super(props);\r\n        this.selectList = [];\r\n        this.addressList= [\r\n            {name:\"湖北省\",text:\"选择城市\",type:\"province\",\r\n                list:[\r\n                    {name:\"武汉市\",text:\"选择区县\",type:\"city\",\r\n                        list:[\r\n                            {name:\"黄陂区\",text:\"选择街道\",type:\"district\",\r\n                                list:[\r\n                                    {name:\"暂不选择\",list:[]},\r\n                                    {name:\"黄陂街道1\",type:\"street\",list:[]},\r\n                                    {name:\"黄陂街道2\",type:\"street\",list:[]}]},\r\n                            {name:\"新洲区\",text:\"选择街道\",type:\"district\",\r\n                                list:[\r\n                                    {name:\"暂不选择\",list:[]},\r\n                                    {name:\"邾城街道1\",type:\"street\",list:[]},\r\n                                    {name:\"邾城街道2\",type:\"street\",list:[]}]}\r\n                        ]},\r\n                    {name:\"孝感市\",text:\"选择区县\",type:\"city\",\r\n                        list:[\r\n                            {name:\"应城区\",text:\"选择街道\",type:\"district\",\r\n                                list:[ {name:\"暂不选择\",list:[]},{name:\"三合镇\",type:\"street\",list:[]},]}]}]},\r\n            {name:\"湖南省\",text:\"选择城市\",type:\"province\",\r\n                list:[\r\n                    {name:\"武汉市\",text:\"选择区县\",type:\"city\",\r\n                        list:[\r\n                            {name:\"黄陂区\",text:\"选择街道\",type:\"district\",\r\n                                list:[\r\n                                    {name:\"暂不选择\",list:[]},\r\n                                    {name:\"黄陂街道1\",type:\"street\",list:[]},\r\n                                    {name:\"黄陂街道2\",type:\"street\",list:[]}]},\r\n                            {name:\"新洲区\",text:\"选择街道\",type:\"district\",\r\n                                list:[\r\n                                    {name:\"暂不选择\",list:[]},\r\n                                    {name:\"邾城街道1\",type:\"street\",list:[]},\r\n                                    {name:\"邾城街道2\",type:\"street\",list:[]}]}\r\n                        ]},\r\n                    {name:\"孝感市\",text:\"选择区县\",type:\"city\",\r\n                        list:[\r\n                            {name:\"应城区\",text:\"选择街道\",type:\"district\",\r\n                                list:[ {name:\"暂不选择\",list:[]},{name:\"三合镇\",type:\"street\",list:[]},]}]}]},\r\n        ];\r\n        this.state={\r\n            defaultText:\"选择省份/城市\",\r\n            province:\"\",\r\n            selectOne:\"\",\r\n            city:\"选择城市\",\r\n            district:\"选择区县\",\r\n            street:\"选择街道\",\r\n            selectList:[],\r\n            hotCity:[\r\n                {name:\"武汉市\",id:\"11\",superId:\"1\",type:\"city\"},\r\n                {name:\"孝感市\",id:\"12\",superId:\"1\",type:\"city\"},\r\n                {name:\"荆门市\",id:\"13\",superId:\"1\",type:\"city\"},\r\n                {name:\"十堰市\",id:\"14\",superId:\"1\",type:\"city\"},\r\n                {name:\"黄冈市\",id:\"15\",superId:\"1\",type:\"city\"},\r\n                {name:\"天门市\",id:\"16\",superId:\"1\",type:\"city\"},\r\n\r\n                {name:\"常德市\",id:\"17\",superId:\"2\",type:\"city\"},\r\n                {name:\"长沙市\",id:\"18\",superId:\"2\",type:\"city\"},\r\n                {name:\"郴州市\",id:\"19\",superId:\"2\",type:\"city\"},\r\n                {name:\"衡阳市\",id:\"20\",superId:\"2\",type:\"city\"},\r\n                {name:\"怀化市\",id:\"21\",superId:\"2\",type:\"city\"},\r\n                {name:\"娄底市\",id:\"22\",superId:\"2\",type:\"city\"},\r\n            ],\r\n            isChoose:false,\r\n            addressList:[\r\n                    {name:\"湖北省\",text:\"选择城市\",type:\"province\",\r\n                        list:[\r\n                            {name:\"武汉市\",text:\"选择区县\",type:\"city\",\r\n                            list:[\r\n                                {name:\"黄陂区\",text:\"选择街道\",type:\"district\",\r\n                                list:[\r\n                                    {name:\"暂不选择\",list:[]},\r\n                                    {name:\"黄陂街道1\",type:\"street\",list:[]},\r\n                                    {name:\"黄陂街道2\",type:\"street\",list:[]}]},\r\n                                {name:\"新洲区\",text:\"选择街道\",type:\"district\",\r\n                                 list:[\r\n                                        {name:\"暂不选择\",list:[]},\r\n                                        {name:\"邾城街道1\",type:\"street\",list:[]},\r\n                                        {name:\"邾城街道2\",type:\"street\",list:[]}]}\r\n                                        ]},\r\n                            {name:\"孝感市\",text:\"选择区县\",type:\"city\",\r\n                             list:[\r\n                                {name:\"应城区\",text:\"选择街道\",type:\"district\",\r\n                                    list:[ {name:\"暂不选择\",list:[]},{name:\"三合镇\",type:\"street\",list:[]},]}]}]},\r\n                {name:\"湖南省\",text:\"选择城市\",type:\"province\",\r\n                    list:[\r\n                        {name:\"武汉市\",text:\"选择区县\",type:\"city\",\r\n                            list:[\r\n                                {name:\"黄陂区\",text:\"选择街道\",type:\"district\",\r\n                                    list:[\r\n                                        {name:\"暂不选择\",list:[]},\r\n                                        {name:\"黄陂街道1\",type:\"street\",list:[]},\r\n                                        {name:\"黄陂街道2\",type:\"street\",list:[]}]},\r\n                                {name:\"新洲区\",text:\"选择街道\",type:\"district\",\r\n                                    list:[\r\n                                        {name:\"暂不选择\",list:[]},\r\n                                        {name:\"邾城街道1\",type:\"street\",list:[]},\r\n                                        {name:\"邾城街道2\",type:\"street\",list:[]}]}\r\n                            ]},\r\n                        {name:\"孝感市\",text:\"选择区县\",type:\"city\",\r\n                            list:[\r\n                                {name:\"应城区\",text:\"选择街道\",type:\"district\",\r\n                                    list:[ {name:\"暂不选择\",list:[]},{name:\"三合镇\",type:\"street\",list:[]},]}]}]},\r\n            ]\r\n        }\r\n    }\r\n    //选择热门城市\r\n    chooseCity(text){\r\n        var province = {};\r\n        var item = {};\r\n        for(var i=0;i<this.addressList.length;i++){\r\n            var itemOne = this.addressList[i];\r\n            //同等类型（都是省份或者都是城市）添加后替换掉原先的地区，清除掉后面的选项。\r\n            for(var j=0;j<itemOne.list.length;j++){\r\n                var itemOne1 = itemOne.list[j];\r\n                if(itemOne1.type == text.type && itemOne1.name.indexOf(text.name)>-1){\r\n                    province = itemOne;\r\n                    item = itemOne1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.selectList.push(province);\r\n        this.selectList.push(item);\r\n        this.selectList.push({name:item.text,list:item.list});\r\n        this.setState({\r\n            selectOne:{name:item.text,list:item.list},\r\n            isChoose:true,\r\n            addressList:item.list,\r\n            defaultText:item.text,\r\n            selectList:this.selectList,\r\n        })\r\n    }\r\n    //改变地址\r\n    changeAddress(item){\r\n        this.setState({\r\n            selectOne:item\r\n        });\r\n        //找到对应的数据集\r\n        this.findOne(this.addressList,item)\r\n    }\r\n    findOne(list,item){\r\n        //debugger;\r\n        console.log(this.state.addressList);\r\n        if(list && list.length){\r\n            for(var i=0;i<list.length;i++){\r\n                var item1 = list[i];\r\n                if(item.name.indexOf(\"选择\")>-1){\r\n                    this.setState({\r\n                        addressList:item.list\r\n                    });\r\n                    break;\r\n                }else if(item.name == item1.name){\r\n                    this.setState({\r\n                        addressList:list\r\n                    });\r\n                    break;\r\n                }else {\r\n                    this.findOne(item1.list,item)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //选择地区\r\n    chooseAddress(item){\r\n        let {getAddress} = this.props;\r\n        for(var i=0;i<this.selectList.length;i++){\r\n                var itemOne = this.selectList[i];\r\n                //将选择列表表带有选择的去掉。\r\n                if(itemOne.name.indexOf(\"选择\")>-1){\r\n                    this.selectList.splice(i,1);\r\n                    break;\r\n                }\r\n                //同等类型（都是省份或者都是城市）添加后替换掉原先的地区，清除掉后面的选项。\r\n                if(itemOne.type == item.type){\r\n                    this.selectList[i] = item;\r\n                    this.selectList = this.selectList.slice(0,i+1);\r\n                    this.selectList.push({name:item.text,list:item.list});\r\n                    break;\r\n                }\r\n        }\r\n        //去重，只添加没有添加的地址\r\n        if(!this.selectList.includes(item)){\r\n            this.selectList.push(item);\r\n            this.selectList.push({name:item.text,list:item.list});\r\n        }\r\n        this.setState({\r\n            selectOne:{name:item.text,list:item.list},\r\n            isChoose:true,\r\n            addressList:item.list,\r\n            defaultText:item.text,\r\n            selectList:this.selectList,\r\n        },()=>{\r\n            if(item.list.length == 0){\r\n                //过滤掉带有选择的值\r\n                getAddress(this.state.selectList.filter((item)=>item.name && item.name.indexOf(\"选择\")<0));\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        let {closeModel,prefixCls} = this.props;\r\n        return(\r\n            <div className={prefixCls}>\r\n                <div className={prefixCls+\"-wrapper\"}>\r\n                <div className={prefixCls+\"-title\"}>\r\n                    <div className={prefixCls+\"-title-left\"}></div>\r\n                    <div className={prefixCls+\"-title-text\"}>请选择</div>\r\n                    <img src={close} alt=\"\" className={prefixCls+\"-title-right\"} onClick={()=>closeModel()}/>\r\n                </div>\r\n                    {this.state.isChoose?\r\n                        <div className={prefixCls+\"-already\"}>\r\n                            {this.state.selectList.map((item,index)=>{\r\n                            return <div key={index}\r\n                                       className={item.name == this.state.selectOne.name?prefixCls+\"-already-item-active\":prefixCls+\"-already-item\"}\r\n                                       onClick={()=>this.changeAddress(item)}\r\n                            >{item.name}</div>\r\n                        })}\r\n                        </div>:\r\n                        <div className={prefixCls+\"-city\"}>\r\n                            <div className={prefixCls+\"-city-text\"}>热门城市</div>\r\n                            <div className={prefixCls+\"-city-list\"}>\r\n                                {\r\n                                    this.state.hotCity.map((item,index)=>{\r\n                                        return <div key={index} className={prefixCls+\"-city-item\"} onClick={()=>this.chooseCity(item)}>{item.name}</div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <div className={prefixCls+\"-select\"}>\r\n                            <div className={prefixCls+\"-select-text\"}>{this.state.defaultText}</div>\r\n                            <div className={prefixCls+\"-select-list\"}>\r\n                                {\r\n                                    this.state.addressList.map((item,index)=>{\r\n                                        return <div className={prefixCls+\"-select-wrapper\"} key={index}>\r\n                                        <div onClick={()=>this.chooseAddress(item,index)}\r\n                                             className={item.name == this.state.selectOne.name?prefixCls+\"-select-item-active\":prefixCls+\"-select-item\"}>{item.name}</div>\r\n                                            {item.name == this.state.selectOne.name? <img src={checked} alt=\"\" className={prefixCls+\"-select-item-checked\"}/>:null}\r\n                                        </div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}