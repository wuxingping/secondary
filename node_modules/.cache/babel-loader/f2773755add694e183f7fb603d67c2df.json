{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caoxue\\\\Desktop\\\\secondary\\\\secondary\\\\src\\\\pages\\\\index\\\\index.js\";\n\n/**\r\n * Created by Lenovo on 2019/8/4.\r\n */\nimport React from 'react';\nimport publish from '../../images/index/publish.png';\nimport { Carousel, ListView, SearchBar } from 'antd-mobile';\nimport { Search, Type, TabBottom } from '../../share';\nimport axios from \"axios\";\nimport { getData, goNext } from '../../utils';\nimport './index.css';\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onEndReached = event => {\n      console.log(\"hasMore\" + this.state.hasMore); // if (this.state.isLoading ) {\n      //     return false;\n      // }\n\n      if (!this.state.hasMore) {\n        return false;\n      }\n\n      this.setState({\n        isLoading: true\n      }, () => {\n        this.getProductList();\n      });\n    };\n\n    this.initData = []; //定义空数组，用于上拉加载更加时拼接数据\n\n    this.typeId = \"\"; //定义商品类型查询\n\n    this.key = \"\"; //定义关键字查询\n\n    const dataSource = new ListView.DataSource({\n      rowHasChanged: (row1, row2) => row1 !== row2\n    }); //数据源初始化\n\n    this.state = {\n      //isLoading: true,//用来控制上拉加载更多时是否显示loading\n      dataSource: dataSource.cloneWithRows(this.initData),\n      pageNum: 1,\n      //定义初始化请求序号\n      pageSize: 10,\n      //定义初始化请求数量\n      typeList: [{\n        name: \"全部\"\n      }],\n      //定义初始化产品类型数组\n      productList: [],\n      //定义初始化产品数组\n      hasMore: true,\n      //是否已经加载完成\n      bannerList: [],\n      //定义初始化轮播图数组\n      statusText: \"加载中\" //定义上拉加载判断状态，3种状态【加载中，加载完成，暂无数据】\n\n    };\n  } //选择商品类型\n\n\n  changeType(item) {\n    this.typeId = item.id;\n    this.state.pageNum = 1;\n    this.initData = [];\n    this.setState({\n      dataSource: this.state.dataSource.cloneWithRows(this.initData),\n      //isLoading: false,\n      hasMore: true,\n      statusText: \"加载中\"\n    });\n    this.getProductList();\n  } //点击某一商品进入商品详情\n\n\n  goDetail(id) {\n    console.log(id);\n    goNext(this, \"indexDetail\", id);\n  } //点击进入发布页面\n\n\n  goPublish(e) {\n    goNext(this, \"publish\");\n  } //获取商品列表\n\n\n  getProductList() {\n    getData({\n      method: 'post',\n      url: 'getProductList',\n      isShowLoad: true,\n      data: {\n        pageNum: this.state.pageNum,\n        pageSize: this.state.pageSize,\n        productDesc: this.key,\n        productTypeId: this.typeId\n      },\n      successCB: res => {\n        this.state.pageNum++;\n        this.initData = this.initData.concat(res.result.list); //已有的数组拼接上拉加载更多的数组\n\n        let total = res.result.total; //商品列表总数量\n\n        if (total == 0) {\n          this.setState({\n            statusText: \"暂无数据\" //总数为0时表示没有数据\n\n          });\n        } else if (total == this.initData.length) {\n          this.setState({\n            dataSource: this.state.dataSource.cloneWithRows(this.initData),\n            hasMore: false,\n            //加载完成 hasMore 状态改为false\n            statusText: \"加载完成\" //拼接的数组长度等于总数时表示加载完成\n\n          });\n        } else {\n          setTimeout(() => {\n            this.setState({\n              dataSource: this.state.dataSource.cloneWithRows(this.initData) //isLoading: false,\n\n            });\n          }, 600);\n        }\n      }\n    });\n  } //获取轮播图列表\n\n\n  getBannerList() {\n    getData({\n      method: 'get',\n      url: 'getBannerList',\n      successCB: res => {\n        this.setState({\n          bannerList: res.result\n        });\n      }\n    });\n  } //获取商品类型列表\n\n\n  getProductTypeList() {\n    getData({\n      method: 'get',\n      url: 'getProductTypeList',\n      successCB: res => {\n        localStorage.setItem(\"typeList\", JSON.stringify(res.result));\n        let typeList = this.state.typeList.concat(res.result);\n        this.setState({\n          typeList: typeList\n        });\n      }\n    });\n  } //通过商品关键字搜索\n\n\n  getProductListByKey(val) {\n    this.state.pageNum = 1;\n    this.initData = [];\n    this.setState({\n      dataSource: this.state.dataSource.cloneWithRows(this.initData),\n      // isLoading: false,\n      hasMore: true,\n      statusText: \"加载中\"\n    });\n    this.key = val;\n    this.getProductList();\n  } //加载页面时获取轮播图列表、商品类型列表、商品列表\n\n\n  componentDidMount() {\n    this.getProductList();\n    this.getProductTypeList();\n    this.getBannerList();\n  } //上拉加载更多时触发\n\n\n  //渲染页面\n  render() {\n    var arr = [];\n\n    const row = (rowData, sectionID, rowID) => {\n      console.log(rowData);\n      var productImgs = rowData.productImgs.split(\",\");\n      var desc = rowData.productDesc && rowData.productDesc.slice(0, 30);\n      return React.createElement(\"div\", {\n        className: rowID % 2 == 0 ? \"index-product-left\" : \"index-product-right\",\n        key: rowID,\n        onClick: () => this.goDetail(rowData.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"index-img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: productImgs[0],\n        alt: \"\",\n        className: \"index-img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"index-desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, desc), React.createElement(\"div\", {\n        className: \"index-price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"\\uFFE5\", rowData && rowData.productPrice), React.createElement(\"span\", {\n        className: \"cm-c-999 cm-fs-14\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, rowData.wantNum, \"\\u4EBA\\u60F3\\u8981\"))), React.createElement(\"div\", {\n        className: \"cm-flex cm-ptb-018 cm-border-top-eee\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: productImgs[0],\n        className: \"cm-img-04 cm-border-radius-half cm-mr-018\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"\\u674F\\u5B50\")));\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Search, {\n      leftClick: val => this.getProductListByKey(val),\n      rightIcon: publish,\n      rightClick: () => this.goPublish(),\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u54C1\\u5173\\u952E\\u5B57\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"index-banner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, this.state.bannerList.length > 0 ? React.createElement(Carousel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.state.bannerList.map((item, index) => {\n      var productImgs = item.productImgs && item.productImgs.split(\",\");\n      return React.createElement(\"img\", {\n        src: productImgs[0],\n        key: index,\n        alt: \"\",\n        className: \"index-banner\",\n        onClick: () => this.goDetail(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      });\n    })) : null), React.createElement(\"div\", {\n      className: \"cm-mlr-018\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Type, {\n      typeList: this.state.typeList,\n      onTypeClick: val => this.changeType(val),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    })), React.createElement(ListView, {\n      useBodyScroll: true,\n      ref: el => this.lv = el,\n      dataSource: this.state.dataSource,\n      renderFooter: () => React.createElement(\"div\", {\n        style: {\n          paddingBottom: 60,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, this.state.statusText),\n      renderBodyComponent: () => React.createElement(Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }),\n      renderRow: row,\n      pageSize: 4,\n      scrollRenderAheadDistance: 500,\n      onEndReached: this.onEndReached,\n      onEndReachedThreshold: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(TabBottom, {\n      history: this.props.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction Body(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, props.children));\n}","map":{"version":3,"sources":["C:\\Users\\caoxue\\Desktop\\secondary\\secondary\\src\\pages\\index\\index.js"],"names":["React","publish","Carousel","ListView","SearchBar","Search","Type","TabBottom","axios","getData","goNext","Index","Component","constructor","props","onEndReached","event","console","log","state","hasMore","setState","isLoading","getProductList","initData","typeId","key","dataSource","DataSource","rowHasChanged","row1","row2","cloneWithRows","pageNum","pageSize","typeList","name","productList","bannerList","statusText","changeType","item","id","goDetail","goPublish","e","method","url","isShowLoad","data","productDesc","productTypeId","successCB","res","concat","result","list","total","length","setTimeout","getBannerList","getProductTypeList","localStorage","setItem","JSON","stringify","getProductListByKey","val","componentDidMount","render","arr","row","rowData","sectionID","rowID","productImgs","split","desc","slice","productPrice","wantNum","map","index","el","lv","paddingBottom","textAlign","history","Body","children"],"mappings":"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","sourcesContent":["/**\r\n * Created by Lenovo on 2019/8/4.\r\n */\r\nimport React from 'react';\r\nimport publish from '../../images/index/publish.png';\r\nimport {Carousel,ListView,SearchBar} from 'antd-mobile';\r\nimport {Search,Type,TabBottom} from '../../share';\r\nimport axios from \"axios\";\r\nimport {getData,goNext} from '../../utils';\r\nimport './index.css';\r\nexport default class Index extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.initData = [];//定义空数组，用于上拉加载更加时拼接数据\r\n        this.typeId=\"\";//定义商品类型查询\r\n        this.key=\"\";//定义关键字查询\r\n        const dataSource = new ListView.DataSource({\r\n            rowHasChanged: (row1, row2) => row1 !== row2,\r\n        })//数据源初始化\r\n        this.state = {\r\n            //isLoading: true,//用来控制上拉加载更多时是否显示loading\r\n            dataSource: dataSource.cloneWithRows(this.initData),\r\n            pageNum:1,//定义初始化请求序号\r\n            pageSize:10,//定义初始化请求数量\r\n            typeList:[{name:\"全部\"}],//定义初始化产品类型数组\r\n            productList:[],//定义初始化产品数组\r\n            hasMore:true,//是否已经加载完成\r\n            bannerList:[],//定义初始化轮播图数组\r\n            statusText:\"加载中\"//定义上拉加载判断状态，3种状态【加载中，加载完成，暂无数据】\r\n        }\r\n    }\r\n    //选择商品类型\r\n    changeType(item){\r\n        this.typeId = item.id;\r\n        this.state.pageNum = 1;\r\n        this.initData = [];\r\n        this.setState({\r\n            dataSource: this.state.dataSource.cloneWithRows(this.initData),\r\n            //isLoading: false,\r\n            hasMore:true,\r\n            statusText:\"加载中\"\r\n        })\r\n        this.getProductList();\r\n    }\r\n    //点击某一商品进入商品详情\r\n    goDetail(id){\r\n        console.log(id);\r\n        goNext(this,\"indexDetail\",id);\r\n    }\r\n    //点击进入发布页面\r\n    goPublish(e){\r\n        goNext(this,\"publish\");\r\n    }\r\n    //获取商品列表\r\n    getProductList(){\r\n        getData({\r\n                method: 'post',\r\n                url: 'getProductList',\r\n                isShowLoad:true,\r\n                data:{\r\n                    pageNum:this.state.pageNum,\r\n                    pageSize:this.state.pageSize,\r\n                    productDesc:this.key,\r\n                    productTypeId:this.typeId\r\n                },\r\n                successCB: (res) => {\r\n                    this.state.pageNum++;\r\n                    this.initData = this.initData.concat(res.result.list);//已有的数组拼接上拉加载更多的数组\r\n                    let total = res.result.total;//商品列表总数量\r\n                    if(total == 0){\r\n                        this.setState({\r\n                            statusText:\"暂无数据\"//总数为0时表示没有数据\r\n                        })\r\n                    }else if(total == this.initData.length){\r\n                        this.setState({\r\n                            dataSource: this.state.dataSource.cloneWithRows(this.initData),\r\n                            hasMore:false,//加载完成 hasMore 状态改为false\r\n                            statusText:\"加载完成\"//拼接的数组长度等于总数时表示加载完成\r\n                        })\r\n                    }else {\r\n                        setTimeout(()=>{\r\n                            this.setState({\r\n                                dataSource: this.state.dataSource.cloneWithRows(this.initData),\r\n                                //isLoading: false,\r\n                            });\r\n                        },600)\r\n\r\n                    }\r\n                }\r\n        })\r\n    }\r\n    //获取轮播图列表\r\n    getBannerList(){\r\n        getData({\r\n                method: 'get',\r\n                url: 'getBannerList',\r\n                successCB: (res) => {\r\n                    this.setState({\r\n                        bannerList: res.result\r\n                    })\r\n                }\r\n        })\r\n    }\r\n    //获取商品类型列表\r\n    getProductTypeList(){\r\n        getData({\r\n            method: 'get',\r\n            url: 'getProductTypeList',\r\n            successCB: (res) => {\r\n                localStorage.setItem(\"typeList\",JSON.stringify(res.result));\r\n                let typeList = this.state.typeList.concat(res.result);\r\n                this.setState({\r\n                    typeList: typeList\r\n                })\r\n            }\r\n        })\r\n    }\r\n    //通过商品关键字搜索\r\n    getProductListByKey(val){\r\n        this.state.pageNum = 1;\r\n        this.initData = [];\r\n        this.setState({\r\n            dataSource: this.state.dataSource.cloneWithRows(this.initData),\r\n           // isLoading: false,\r\n            hasMore:true,\r\n            statusText:\"加载中\"\r\n        })\r\n        this.key = val;\r\n        this.getProductList()\r\n    }\r\n    //加载页面时获取轮播图列表、商品类型列表、商品列表\r\n    componentDidMount(){\r\n        this.getProductList();\r\n        this.getProductTypeList();\r\n        this.getBannerList();\r\n    }\r\n    //上拉加载更多时触发\r\n    onEndReached = (event) => {\r\n        console.log(\"hasMore\"+this.state.hasMore);\r\n        // if (this.state.isLoading ) {\r\n        //     return false;\r\n        // }\r\n        if (!this.state.hasMore) {\r\n            return false;\r\n        }\r\n        this.setState({ isLoading: true},()=>{\r\n            this.getProductList();\r\n        });\r\n    }\r\n\r\n    //渲染页面\r\n    render() {\r\n        var arr=[];\r\n        const row = (rowData, sectionID, rowID) => {\r\n            console.log(rowData);\r\n            var productImgs = rowData.productImgs.split(\",\");\r\n            var desc = rowData.productDesc && rowData.productDesc.slice(0,30);\r\n            return (\r\n                    <div  className={rowID%2==0?\"index-product-left\":\"index-product-right\"} key={rowID} onClick={()=>this.goDetail(rowData.id)}>\r\n                        <div>\r\n                        <div className=\"index-img\">\r\n                            <img src={productImgs[0]} alt=\"\" className=\"index-img\"/>\r\n                        </div>\r\n                        <div className=\"index-desc\">{desc}</div>\r\n                        <div className=\"index-price\">\r\n                            <span>￥{rowData && rowData.productPrice}</span>\r\n                            <span className=\"cm-c-999 cm-fs-14\">{rowData.wantNum}人想要</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"cm-flex cm-ptb-018 cm-border-top-eee\">\r\n                            <img src={productImgs[0]} className=\"cm-img-04 cm-border-radius-half cm-mr-018\" alt=\"\"/>\r\n                            <div>杏子</div>\r\n                        </div>\r\n                    </div>\r\n            );\r\n        };\r\n        return (\r\n            <div>\r\n                <Search\r\n                    leftClick = {(val)=>this.getProductListByKey(val)}\r\n                    rightIcon={publish}\r\n                    rightClick={()=>this.goPublish()}\r\n                    placeholder=\"请输入商品关键字\"\r\n                />\r\n                <div className=\"index-banner\">\r\n                     {this.state.bannerList.length>0?\r\n                         <Carousel>\r\n                              {this.state.bannerList.map((item,index) => {\r\n                                  var productImgs = item.productImgs && item.productImgs.split(\",\");\r\n                                  return (<img src={productImgs[0]} key={index} alt=\"\" className=\"index-banner\" onClick={()=>this.goDetail(item.id)}/>)\r\n                              })}\r\n                            </Carousel>:null\r\n                     }\r\n                </div>\r\n                <div className=\"cm-mlr-018\">\r\n                    <Type\r\n                        typeList = {this.state.typeList}\r\n                        onTypeClick = {(val)=>this.changeType(val)}\r\n                    />\r\n                </div>\r\n                <ListView\r\n                        useBodyScroll={true}\r\n                        ref={el => this.lv = el}\r\n                        dataSource={this.state.dataSource}\r\n                        renderFooter={() => (<div style={{ paddingBottom: 60, textAlign: 'center' }}>\r\n                            {this.state.statusText}\r\n                        </div>)}\r\n                        renderBodyComponent={() => <Body/>}\r\n                        renderRow={row}\r\n                        pageSize={4}\r\n                        scrollRenderAheadDistance={500}\r\n                        onEndReached={this.onEndReached}\r\n                        onEndReachedThreshold={10}\r\n                    />\r\n                   <TabBottom history={this.props.history}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction Body(props) {\r\n    return(\r\n        <div>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}