{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caoxue\\\\Desktop\\\\secondary\\\\src\\\\share\\\\address\\\\index.js\";\n\n/**\r\n * Created by Lenovo on 2019/10/15.\r\n */\nimport React from 'react';\nimport { defaultProps } from './defaultProps';\nimport './index.css';\nimport close from '../images/address/close-gray.png';\nimport checked from '../images/address/checked.png';\nimport addressInfo from './addressInfo';\nexport default class Address extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selectList = [];\n    this.addressList = [{\n      name: \"湖北省\",\n      text: \"选择城市\",\n      type: \"province\",\n      list: [{\n        name: \"武汉市\",\n        text: \"选择区县\",\n        type: \"city\",\n        list: [{\n          name: \"黄陂区\",\n          text: \"选择街道\",\n          type: \"district\",\n          list: [{\n            name: \"暂不选择\",\n            list: []\n          }, {\n            name: \"黄陂街道1\",\n            type: \"street\",\n            list: []\n          }, {\n            name: \"黄陂街道2\",\n            type: \"street\",\n            list: []\n          }]\n        }, {\n          name: \"新洲区\",\n          text: \"选择街道\",\n          type: \"district\",\n          list: [{\n            name: \"暂不选择\",\n            list: []\n          }, {\n            name: \"邾城街道1\",\n            type: \"street\",\n            list: []\n          }, {\n            name: \"邾城街道2\",\n            type: \"street\",\n            list: []\n          }]\n        }]\n      }, {\n        name: \"孝感市\",\n        text: \"选择区县\",\n        type: \"city\",\n        list: [{\n          name: \"应城区\",\n          text: \"选择街道\",\n          type: \"district\",\n          list: [{\n            name: \"暂不选择\",\n            list: []\n          }, {\n            name: \"三合镇\",\n            type: \"street\",\n            list: []\n          }]\n        }]\n      }]\n    }, {\n      name: \"湖南省\",\n      text: \"选择城市\",\n      type: \"province\",\n      list: [{\n        name: \"武汉市\",\n        text: \"选择区县\",\n        type: \"city\",\n        list: [{\n          name: \"黄陂区\",\n          text: \"选择街道\",\n          type: \"district\",\n          list: [{\n            name: \"暂不选择\",\n            list: []\n          }, {\n            name: \"黄陂街道1\",\n            type: \"street\",\n            list: []\n          }, {\n            name: \"黄陂街道2\",\n            type: \"street\",\n            list: []\n          }]\n        }, {\n          name: \"新洲区\",\n          text: \"选择街道\",\n          type: \"district\",\n          list: [{\n            name: \"暂不选择\",\n            list: []\n          }, {\n            name: \"邾城街道1\",\n            type: \"street\",\n            list: []\n          }, {\n            name: \"邾城街道2\",\n            type: \"street\",\n            list: []\n          }]\n        }]\n      }, {\n        name: \"孝感市\",\n        text: \"选择区县\",\n        type: \"city\",\n        list: [{\n          name: \"应城区\",\n          text: \"选择街道\",\n          type: \"district\",\n          list: [{\n            name: \"暂不选择\",\n            list: []\n          }, {\n            name: \"三合镇\",\n            type: \"street\",\n            list: []\n          }]\n        }]\n      }]\n    }];\n    this.state = {\n      defaultText: \"选择省份/城市\",\n      province: \"\",\n      selectOne: \"\",\n      city: \"选择城市\",\n      district: \"选择区县\",\n      street: \"选择街道\",\n      selectList: [],\n      hotCity: [\"北京\", \"上海\", \"孝感\", \"深圳\", \"杭州\", \"南京\", \"苏州\", \"天津\", \"武汉\", \"长沙\", \"重庆\", \"成都\"],\n      isChoose: false,\n      addressList: [{\n        name: \"湖北省\",\n        text: \"选择城市\",\n        type: \"province\",\n        list: [{\n          name: \"武汉市\",\n          text: \"选择区县\",\n          type: \"city\",\n          list: [{\n            name: \"黄陂区\",\n            text: \"选择街道\",\n            type: \"district\",\n            list: [{\n              name: \"暂不选择\",\n              list: []\n            }, {\n              name: \"黄陂街道1\",\n              type: \"street\",\n              list: []\n            }, {\n              name: \"黄陂街道2\",\n              type: \"street\",\n              list: []\n            }]\n          }, {\n            name: \"新洲区\",\n            text: \"选择街道\",\n            type: \"district\",\n            list: [{\n              name: \"暂不选择\",\n              list: []\n            }, {\n              name: \"邾城街道1\",\n              type: \"street\",\n              list: []\n            }, {\n              name: \"邾城街道2\",\n              type: \"street\",\n              list: []\n            }]\n          }]\n        }, {\n          name: \"孝感市\",\n          text: \"选择区县\",\n          type: \"city\",\n          list: [{\n            name: \"应城区\",\n            text: \"选择街道\",\n            type: \"district\",\n            list: [{\n              name: \"暂不选择\",\n              list: []\n            }, {\n              name: \"三合镇\",\n              type: \"street\",\n              list: []\n            }]\n          }]\n        }]\n      }, {\n        name: \"湖南省\",\n        text: \"选择城市\",\n        type: \"province\",\n        list: [{\n          name: \"武汉市\",\n          text: \"选择区县\",\n          type: \"city\",\n          list: [{\n            name: \"黄陂区\",\n            text: \"选择街道\",\n            type: \"district\",\n            list: [{\n              name: \"暂不选择\",\n              list: []\n            }, {\n              name: \"黄陂街道1\",\n              type: \"street\",\n              list: []\n            }, {\n              name: \"黄陂街道2\",\n              type: \"street\",\n              list: []\n            }]\n          }, {\n            name: \"新洲区\",\n            text: \"选择街道\",\n            type: \"district\",\n            list: [{\n              name: \"暂不选择\",\n              list: []\n            }, {\n              name: \"邾城街道1\",\n              type: \"street\",\n              list: []\n            }, {\n              name: \"邾城街道2\",\n              type: \"street\",\n              list: []\n            }]\n          }]\n        }, {\n          name: \"孝感市\",\n          text: \"选择区县\",\n          type: \"city\",\n          list: [{\n            name: \"应城区\",\n            text: \"选择街道\",\n            type: \"district\",\n            list: [{\n              name: \"暂不选择\",\n              list: []\n            }, {\n              name: \"三合镇\",\n              type: \"street\",\n              list: []\n            }]\n          }]\n        }]\n      }]\n    };\n  } //选择热门城市\n\n\n  chooseCity(text) {\n    var province = {};\n    var item = {};\n\n    for (var i = 0; i < this.addressList.length; i++) {\n      var itemOne = this.addressList[i]; //同等类型（都是省份或者都是城市）添加后替换掉原先的地区，清除掉后面的选项。\n\n      for (var j = 0; j < itemOne.list.length; j++) {\n        var itemOne1 = itemOne.list[j];\n\n        if (itemOne1.type == \"city\" && itemOne1.name.indexOf(text) > -1) {\n          province = itemOne;\n          item = itemOne1;\n          break;\n        }\n      }\n    }\n\n    this.selectList.push(province);\n    this.selectList.push(item);\n    this.selectList.push({\n      name: item.text,\n      list: item.list\n    });\n    this.setState({\n      selectOne: {\n        name: item.text,\n        list: item.list\n      },\n      isChoose: true,\n      addressList: item.list,\n      defaultText: item.text,\n      selectList: this.selectList\n    });\n  } //改变地址\n\n\n  changeAddress(item) {\n    this.setState({\n      selectOne: item\n    }); //找到对应的数据集\n\n    this.findOne(this.addressList, item);\n  }\n\n  findOne(list, item) {\n    //debugger;\n    console.log(this.state.addressList);\n\n    if (list && list.length) {\n      for (var i = 0; i < list.length; i++) {\n        var item1 = list[i];\n\n        if (item.name.indexOf(\"选择\") > -1) {\n          this.setState({\n            addressList: item.list\n          });\n          break;\n        } else if (item.name == item1.name) {\n          this.setState({\n            addressList: list\n          });\n          break;\n        } else {\n          this.findOne(item1.list, item);\n        }\n      }\n    }\n  } //选择地区\n\n\n  chooseAddress(item) {\n    let getAddress = this.props.getAddress;\n\n    for (var i = 0; i < this.selectList.length; i++) {\n      var itemOne = this.selectList[i]; //将选择列表表带有选择的去掉。\n\n      if (itemOne.name.indexOf(\"选择\") > -1) {\n        this.selectList.splice(i, 1);\n        break;\n      } //同等类型（都是省份或者都是城市）添加后替换掉原先的地区，清除掉后面的选项。\n\n\n      if (itemOne.type == item.type) {\n        this.selectList[i] = item;\n        this.selectList = this.selectList.slice(0, i + 1);\n        this.selectList.push({\n          name: item.text,\n          list: item.list\n        });\n        break;\n      }\n    } //去重，只添加没有添加的地址\n\n\n    if (!this.selectList.includes(item)) {\n      this.selectList.push(item);\n      this.selectList.push({\n        name: item.text,\n        list: item.list\n      });\n    }\n\n    this.setState({\n      selectOne: {\n        name: item.text,\n        list: item.list\n      },\n      isChoose: true,\n      addressList: item.list,\n      defaultText: item.text,\n      selectList: this.selectList\n    }, () => {\n      if (item.list.length == 0) {\n        //过滤掉带有选择的值\n        getAddress(this.state.selectList.filter(item => item.name && item.name.indexOf(\"选择\") < 0));\n      }\n    });\n  }\n\n  render() {\n    let _this$props = this.props,\n        closeModel = _this$props.closeModel,\n        prefixCls = _this$props.prefixCls;\n    return React.createElement(\"div\", {\n      className: prefixCls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: prefixCls + \"-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: prefixCls + \"-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: prefixCls + \"-title-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: prefixCls + \"-title-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"\\u8BF7\\u9009\\u62E9\"), React.createElement(\"img\", {\n      src: close,\n      alt: \"\",\n      className: prefixCls + \"-title-right\",\n      onClick: () => closeModel(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), this.state.isChoose ? React.createElement(\"div\", {\n      className: prefixCls + \"-already\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, this.state.selectList.map((item, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: item.name == this.state.selectOne.name ? prefixCls + \"-already-item-active\" : prefixCls + \"-already-item\",\n        onClick: () => this.changeAddress(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, item.name);\n    })) : React.createElement(\"div\", {\n      className: prefixCls + \"-city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: prefixCls + \"-city-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"\\u70ED\\u95E8\\u57CE\\u5E02\"), React.createElement(\"div\", {\n      className: prefixCls + \"-city-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, this.state.hotCity.map((item, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: prefixCls + \"-city-item\",\n        onClick: () => this.chooseCity(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, item);\n    }))), React.createElement(\"div\", {\n      className: prefixCls + \"-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: prefixCls + \"-select-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, this.state.defaultText), React.createElement(\"div\", {\n      className: prefixCls + \"-select-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, this.state.addressList.map((item, index) => {\n      return React.createElement(\"div\", {\n        className: prefixCls + \"-select-wrapper\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: () => this.chooseAddress(item, index),\n        className: item.name == this.state.selectOne.name ? prefixCls + \"-select-item-active\" : prefixCls + \"-select-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, item.name), item.name == this.state.selectOne.name ? React.createElement(\"img\", {\n        src: checked,\n        alt: \"\",\n        className: prefixCls + \"-select-item-checked\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }) : null);\n    })))));\n  }\n\n}\nAddress.defaultProps = defaultProps;","map":{"version":3,"sources":["C:\\Users\\caoxue\\Desktop\\secondary\\src\\share\\address\\index.js"],"names":["React","defaultProps","close","checked","addressInfo","Address","Component","constructor","props","selectList","addressList","name","text","type","list","state","defaultText","province","selectOne","city","district","street","hotCity","isChoose","chooseCity","item","i","length","itemOne","j","itemOne1","indexOf","push","setState","changeAddress","findOne","console","log","item1","chooseAddress","getAddress","splice","slice","includes","filter","render","closeModel","prefixCls","map","index"],"mappings":"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","sourcesContent":["/**\r\n * Created by Lenovo on 2019/10/15.\r\n */\r\nimport React from 'react';\r\nimport {defaultProps} from './defaultProps';\r\nimport './index.css';\r\nimport close from '../images/address/close-gray.png';\r\nimport checked from '../images/address/checked.png';\r\nimport addressInfo from './addressInfo';\r\nexport default class Address extends React.Component {\r\n    static defaultProps = defaultProps;\r\n    constructor(props){\r\n        super(props);\r\n        this.selectList = [];\r\n        this.addressList= [\r\n            {name:\"湖北省\",text:\"选择城市\",type:\"province\",\r\n                list:[\r\n                    {name:\"武汉市\",text:\"选择区县\",type:\"city\",\r\n                        list:[\r\n                            {name:\"黄陂区\",text:\"选择街道\",type:\"district\",\r\n                                list:[\r\n                                    {name:\"暂不选择\",list:[]},\r\n                                    {name:\"黄陂街道1\",type:\"street\",list:[]},\r\n                                    {name:\"黄陂街道2\",type:\"street\",list:[]}]},\r\n                            {name:\"新洲区\",text:\"选择街道\",type:\"district\",\r\n                                list:[\r\n                                    {name:\"暂不选择\",list:[]},\r\n                                    {name:\"邾城街道1\",type:\"street\",list:[]},\r\n                                    {name:\"邾城街道2\",type:\"street\",list:[]}]}\r\n                        ]},\r\n                    {name:\"孝感市\",text:\"选择区县\",type:\"city\",\r\n                        list:[\r\n                            {name:\"应城区\",text:\"选择街道\",type:\"district\",\r\n                                list:[ {name:\"暂不选择\",list:[]},{name:\"三合镇\",type:\"street\",list:[]},]}]}]},\r\n            {name:\"湖南省\",text:\"选择城市\",type:\"province\",\r\n                list:[\r\n                    {name:\"武汉市\",text:\"选择区县\",type:\"city\",\r\n                        list:[\r\n                            {name:\"黄陂区\",text:\"选择街道\",type:\"district\",\r\n                                list:[\r\n                                    {name:\"暂不选择\",list:[]},\r\n                                    {name:\"黄陂街道1\",type:\"street\",list:[]},\r\n                                    {name:\"黄陂街道2\",type:\"street\",list:[]}]},\r\n                            {name:\"新洲区\",text:\"选择街道\",type:\"district\",\r\n                                list:[\r\n                                    {name:\"暂不选择\",list:[]},\r\n                                    {name:\"邾城街道1\",type:\"street\",list:[]},\r\n                                    {name:\"邾城街道2\",type:\"street\",list:[]}]}\r\n                        ]},\r\n                    {name:\"孝感市\",text:\"选择区县\",type:\"city\",\r\n                        list:[\r\n                            {name:\"应城区\",text:\"选择街道\",type:\"district\",\r\n                                list:[ {name:\"暂不选择\",list:[]},{name:\"三合镇\",type:\"street\",list:[]},]}]}]},\r\n        ];\r\n        this.state={\r\n            defaultText:\"选择省份/城市\",\r\n            province:\"\",\r\n            selectOne:\"\",\r\n            city:\"选择城市\",\r\n            district:\"选择区县\",\r\n            street:\"选择街道\",\r\n            selectList:[],\r\n            hotCity:[\r\n                \"北京\",\"上海\",\"孝感\",\"深圳\",\"杭州\",\"南京\",\"苏州\",\"天津\",\"武汉\",\"长沙\",\"重庆\",\"成都\"\r\n            ],\r\n            isChoose:false,\r\n            addressList:[\r\n                    {name:\"湖北省\",text:\"选择城市\",type:\"province\",\r\n                        list:[\r\n                            {name:\"武汉市\",text:\"选择区县\",type:\"city\",\r\n                            list:[\r\n                                {name:\"黄陂区\",text:\"选择街道\",type:\"district\",\r\n                                list:[\r\n                                    {name:\"暂不选择\",list:[]},\r\n                                    {name:\"黄陂街道1\",type:\"street\",list:[]},\r\n                                    {name:\"黄陂街道2\",type:\"street\",list:[]}]},\r\n                                {name:\"新洲区\",text:\"选择街道\",type:\"district\",\r\n                                 list:[\r\n                                        {name:\"暂不选择\",list:[]},\r\n                                        {name:\"邾城街道1\",type:\"street\",list:[]},\r\n                                        {name:\"邾城街道2\",type:\"street\",list:[]}]}\r\n                                        ]},\r\n                            {name:\"孝感市\",text:\"选择区县\",type:\"city\",\r\n                             list:[\r\n                                {name:\"应城区\",text:\"选择街道\",type:\"district\",\r\n                                    list:[ {name:\"暂不选择\",list:[]},{name:\"三合镇\",type:\"street\",list:[]},]}]}]},\r\n                {name:\"湖南省\",text:\"选择城市\",type:\"province\",\r\n                    list:[\r\n                        {name:\"武汉市\",text:\"选择区县\",type:\"city\",\r\n                            list:[\r\n                                {name:\"黄陂区\",text:\"选择街道\",type:\"district\",\r\n                                    list:[\r\n                                        {name:\"暂不选择\",list:[]},\r\n                                        {name:\"黄陂街道1\",type:\"street\",list:[]},\r\n                                        {name:\"黄陂街道2\",type:\"street\",list:[]}]},\r\n                                {name:\"新洲区\",text:\"选择街道\",type:\"district\",\r\n                                    list:[\r\n                                        {name:\"暂不选择\",list:[]},\r\n                                        {name:\"邾城街道1\",type:\"street\",list:[]},\r\n                                        {name:\"邾城街道2\",type:\"street\",list:[]}]}\r\n                            ]},\r\n                        {name:\"孝感市\",text:\"选择区县\",type:\"city\",\r\n                            list:[\r\n                                {name:\"应城区\",text:\"选择街道\",type:\"district\",\r\n                                    list:[ {name:\"暂不选择\",list:[]},{name:\"三合镇\",type:\"street\",list:[]},]}]}]},\r\n            ]\r\n        }\r\n    }\r\n    //选择热门城市\r\n    chooseCity(text){\r\n        var province = {};\r\n        var item = {};\r\n        for(var i=0;i<this.addressList.length;i++){\r\n            var itemOne = this.addressList[i];\r\n            //同等类型（都是省份或者都是城市）添加后替换掉原先的地区，清除掉后面的选项。\r\n            for(var j=0;j<itemOne.list.length;j++){\r\n                var itemOne1 = itemOne.list[j];\r\n                if(itemOne1.type == \"city\" && itemOne1.name.indexOf(text)>-1){\r\n                    province = itemOne;\r\n                    item = itemOne1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.selectList.push(province);\r\n        this.selectList.push(item);\r\n        this.selectList.push({name:item.text,list:item.list});\r\n        this.setState({\r\n            selectOne:{name:item.text,list:item.list},\r\n            isChoose:true,\r\n            addressList:item.list,\r\n            defaultText:item.text,\r\n            selectList:this.selectList,\r\n        })\r\n    }\r\n    //改变地址\r\n    changeAddress(item){\r\n        this.setState({\r\n            selectOne:item\r\n        });\r\n        //找到对应的数据集\r\n        this.findOne(this.addressList,item)\r\n    }\r\n    findOne(list,item){\r\n        //debugger;\r\n        console.log(this.state.addressList);\r\n        if(list && list.length){\r\n            for(var i=0;i<list.length;i++){\r\n                var item1 = list[i];\r\n                if(item.name.indexOf(\"选择\")>-1){\r\n                    this.setState({\r\n                        addressList:item.list\r\n                    });\r\n                    break;\r\n                }else if(item.name == item1.name){\r\n                    this.setState({\r\n                        addressList:list\r\n                    });\r\n                    break;\r\n                }else {\r\n                    this.findOne(item1.list,item)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //选择地区\r\n    chooseAddress(item){\r\n        let {getAddress} = this.props;\r\n        for(var i=0;i<this.selectList.length;i++){\r\n                var itemOne = this.selectList[i];\r\n                //将选择列表表带有选择的去掉。\r\n                if(itemOne.name.indexOf(\"选择\")>-1){\r\n                    this.selectList.splice(i,1);\r\n                    break;\r\n                }\r\n                //同等类型（都是省份或者都是城市）添加后替换掉原先的地区，清除掉后面的选项。\r\n                if(itemOne.type == item.type){\r\n                    this.selectList[i] = item;\r\n                    this.selectList = this.selectList.slice(0,i+1);\r\n                    this.selectList.push({name:item.text,list:item.list});\r\n                    break;\r\n                }\r\n        }\r\n        //去重，只添加没有添加的地址\r\n        if(!this.selectList.includes(item)){\r\n            this.selectList.push(item);\r\n            this.selectList.push({name:item.text,list:item.list});\r\n        }\r\n        this.setState({\r\n            selectOne:{name:item.text,list:item.list},\r\n            isChoose:true,\r\n            addressList:item.list,\r\n            defaultText:item.text,\r\n            selectList:this.selectList,\r\n        },()=>{\r\n            if(item.list.length == 0){\r\n                //过滤掉带有选择的值\r\n                getAddress(this.state.selectList.filter((item)=>item.name && item.name.indexOf(\"选择\")<0));\r\n            }\r\n        })\r\n    }\r\n    render(){\r\n        let {closeModel,prefixCls} = this.props;\r\n        return(\r\n            <div className={prefixCls}>\r\n                <div className={prefixCls+\"-wrapper\"}>\r\n                <div className={prefixCls+\"-title\"}>\r\n                    <div className={prefixCls+\"-title-left\"}></div>\r\n                    <div className={prefixCls+\"-title-text\"}>请选择</div>\r\n                    <img src={close} alt=\"\" className={prefixCls+\"-title-right\"} onClick={()=>closeModel()}/>\r\n                </div>\r\n                    {this.state.isChoose?\r\n                        <div className={prefixCls+\"-already\"}>\r\n                            {this.state.selectList.map((item,index)=>{\r\n                            return <div key={index}\r\n                                       className={item.name == this.state.selectOne.name?prefixCls+\"-already-item-active\":prefixCls+\"-already-item\"}\r\n                                       onClick={()=>this.changeAddress(item)}\r\n                            >{item.name}</div>\r\n                        })}\r\n                        </div>:\r\n                        <div className={prefixCls+\"-city\"}>\r\n                            <div className={prefixCls+\"-city-text\"}>热门城市</div>\r\n                            <div className={prefixCls+\"-city-list\"}>\r\n                                {\r\n                                    this.state.hotCity.map((item,index)=>{\r\n                                        return <div key={index} className={prefixCls+\"-city-item\"} onClick={()=>this.chooseCity(item)}>{item}</div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <div className={prefixCls+\"-select\"}>\r\n                            <div className={prefixCls+\"-select-text\"}>{this.state.defaultText}</div>\r\n                            <div className={prefixCls+\"-select-list\"}>\r\n                                {\r\n                                    this.state.addressList.map((item,index)=>{\r\n                                        return <div className={prefixCls+\"-select-wrapper\"} key={index}>\r\n                                        <div onClick={()=>this.chooseAddress(item,index)}\r\n                                             className={item.name == this.state.selectOne.name?prefixCls+\"-select-item-active\":prefixCls+\"-select-item\"}>{item.name}</div>\r\n                                            {item.name == this.state.selectOne.name? <img src={checked} alt=\"\" className={prefixCls+\"-select-item-checked\"}/>:null}\r\n                                        </div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}